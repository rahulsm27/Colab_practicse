{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-11T02:45:01.272459Z","iopub.execute_input":"2024-04-11T02:45:01.273060Z","iopub.status.idle":"2024-04-11T02:45:01.279649Z","shell.execute_reply.started":"2024-04-11T02:45:01.273025Z","shell.execute_reply":"2024-04-11T02:45:01.278308Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"## STEP1 : Import Libraries and Load Dataset","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom catboost import CatBoostRegressor\nfrom tqdm import tqdm\nimport gc\nimport datetime as dt","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:02:29.472316Z","iopub.execute_input":"2024-04-11T03:02:29.472751Z","iopub.status.idle":"2024-04-11T03:02:29.479148Z","shell.execute_reply.started":"2024-04-11T03:02:29.472722Z","shell.execute_reply":"2024-04-11T03:02:29.477876Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"# Load the properties dataset\nprint('Loading Properties ...')\nproperties2016 = pd.read_csv('/kaggle/input/zillow-prize-1/properties_2016.csv', low_memory = False)\nproperties2017 = pd.read_csv('/kaggle/input/zillow-prize-1/properties_2017.csv', low_memory = False)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:02:30.227622Z","iopub.execute_input":"2024-04-11T03:02:30.228803Z","iopub.status.idle":"2024-04-11T03:03:41.268872Z","shell.execute_reply.started":"2024-04-11T03:02:30.228756Z","shell.execute_reply":"2024-04-11T03:03:41.267256Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"Loading Properties ...\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Loading Train ...')\ntrain2016 = pd.read_csv('/kaggle/input/zillow-prize-1/train_2016_v2.csv', parse_dates=['transactiondate'], low_memory=False)\ntrain2017 = pd.read_csv('/kaggle/input/zillow-prize-1/train_2017.csv', parse_dates=['transactiondate'], low_memory=False)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:41.271872Z","iopub.execute_input":"2024-04-11T03:03:41.272511Z","iopub.status.idle":"2024-04-11T03:03:41.401843Z","shell.execute_reply.started":"2024-04-11T03:03:41.272436Z","shell.execute_reply":"2024-04-11T03:03:41.400288Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"Loading Train ...\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Loading Sample ...')\nsample_submission = pd.read_csv('/kaggle/input/zillow-prize-1/sample_submission.csv', low_memory = False)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:41.403669Z","iopub.execute_input":"2024-04-11T03:03:41.404186Z","iopub.status.idle":"2024-04-11T03:03:42.504647Z","shell.execute_reply.started":"2024-04-11T03:03:41.404143Z","shell.execute_reply":"2024-04-11T03:03:42.503305Z"},"trusted":true},"execution_count":40,"outputs":[{"name":"stdout","text":"Loading Sample ...\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## STEP 2 : EDA","metadata":{}},{"cell_type":"code","source":"# Lets check the records of properties dataset for 2016 record\nproperties2016.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:42.507348Z","iopub.execute_input":"2024-04-11T03:03:42.508368Z","iopub.status.idle":"2024-04-11T03:03:42.535232Z","shell.execute_reply.started":"2024-04-11T03:03:42.508331Z","shell.execute_reply":"2024-04-11T03:03:42.534022Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"   parcelid  airconditioningtypeid  architecturalstyletypeid  basementsqft  \\\n0  10754147                    NaN                       NaN           NaN   \n1  10759547                    NaN                       NaN           NaN   \n2  10843547                    NaN                       NaN           NaN   \n3  10859147                    NaN                       NaN           NaN   \n4  10879947                    NaN                       NaN           NaN   \n\n   bathroomcnt  bedroomcnt  buildingclasstypeid  buildingqualitytypeid  \\\n0          0.0         0.0                  NaN                    NaN   \n1          0.0         0.0                  NaN                    NaN   \n2          0.0         0.0                  NaN                    NaN   \n3          0.0         0.0                  3.0                    7.0   \n4          0.0         0.0                  4.0                    NaN   \n\n   calculatedbathnbr  decktypeid  ...  numberofstories  fireplaceflag  \\\n0                NaN         NaN  ...              NaN            NaN   \n1                NaN         NaN  ...              NaN            NaN   \n2                NaN         NaN  ...              NaN            NaN   \n3                NaN         NaN  ...              1.0            NaN   \n4                NaN         NaN  ...              NaN            NaN   \n\n   structuretaxvaluedollarcnt  taxvaluedollarcnt  assessmentyear  \\\n0                         NaN                9.0          2015.0   \n1                         NaN            27516.0          2015.0   \n2                    650756.0          1413387.0          2015.0   \n3                    571346.0          1156834.0          2015.0   \n4                    193796.0           433491.0          2015.0   \n\n   landtaxvaluedollarcnt  taxamount  taxdelinquencyflag  taxdelinquencyyear  \\\n0                    9.0        NaN                 NaN                 NaN   \n1                27516.0        NaN                 NaN                 NaN   \n2               762631.0   20800.37                 NaN                 NaN   \n3               585488.0   14557.57                 NaN                 NaN   \n4               239695.0    5725.17                 NaN                 NaN   \n\n   censustractandblock  \n0                  NaN  \n1                  NaN  \n2                  NaN  \n3                  NaN  \n4                  NaN  \n\n[5 rows x 58 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>airconditioningtypeid</th>\n      <th>architecturalstyletypeid</th>\n      <th>basementsqft</th>\n      <th>bathroomcnt</th>\n      <th>bedroomcnt</th>\n      <th>buildingclasstypeid</th>\n      <th>buildingqualitytypeid</th>\n      <th>calculatedbathnbr</th>\n      <th>decktypeid</th>\n      <th>...</th>\n      <th>numberofstories</th>\n      <th>fireplaceflag</th>\n      <th>structuretaxvaluedollarcnt</th>\n      <th>taxvaluedollarcnt</th>\n      <th>assessmentyear</th>\n      <th>landtaxvaluedollarcnt</th>\n      <th>taxamount</th>\n      <th>taxdelinquencyflag</th>\n      <th>taxdelinquencyyear</th>\n      <th>censustractandblock</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10754147</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>9.0</td>\n      <td>2015.0</td>\n      <td>9.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10759547</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>27516.0</td>\n      <td>2015.0</td>\n      <td>27516.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10843547</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>650756.0</td>\n      <td>1413387.0</td>\n      <td>2015.0</td>\n      <td>762631.0</td>\n      <td>20800.37</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10859147</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.0</td>\n      <td>7.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>571346.0</td>\n      <td>1156834.0</td>\n      <td>2015.0</td>\n      <td>585488.0</td>\n      <td>14557.57</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10879947</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>193796.0</td>\n      <td>433491.0</td>\n      <td>2015.0</td>\n      <td>239695.0</td>\n      <td>5725.17</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 58 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"properties2016.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:42.537092Z","iopub.execute_input":"2024-04-11T03:03:42.537783Z","iopub.status.idle":"2024-04-11T03:03:50.467800Z","shell.execute_reply.started":"2024-04-11T03:03:42.537747Z","shell.execute_reply":"2024-04-11T03:03:50.466441Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"           parcelid  airconditioningtypeid  architecturalstyletypeid  \\\ncount  2.985217e+06          811519.000000               6061.000000   \nmean   1.332586e+07               1.931166                  7.202607   \nstd    7.909966e+06               3.148587                  2.436290   \nmin    1.071172e+07               1.000000                  2.000000   \n25%    1.164371e+07               1.000000                  7.000000   \n50%    1.254509e+07               1.000000                  7.000000   \n75%    1.409712e+07               1.000000                  7.000000   \nmax    1.696019e+08              13.000000                 27.000000   \n\n       basementsqft   bathroomcnt    bedroomcnt  buildingclasstypeid  \\\ncount   1628.000000  2.973755e+06  2.973767e+06         12629.000000   \nmean     646.883292  2.209143e+00  3.088949e+00             3.725948   \nstd      538.793473  1.077754e+00  1.275859e+00             0.501700   \nmin       20.000000  0.000000e+00  0.000000e+00             1.000000   \n25%      272.000000  2.000000e+00  2.000000e+00             3.000000   \n50%      534.000000  2.000000e+00  3.000000e+00             4.000000   \n75%      847.250000  3.000000e+00  4.000000e+00             4.000000   \nmax     8516.000000  2.000000e+01  2.000000e+01             5.000000   \n\n       buildingqualitytypeid  calculatedbathnbr  decktypeid  ...  \\\ncount           1.938488e+06       2.856305e+06     17096.0  ...   \nmean            5.784787e+00       2.299263e+00        66.0  ...   \nstd             1.805352e+00       1.000736e+00         0.0  ...   \nmin             1.000000e+00       1.000000e+00        66.0  ...   \n25%             4.000000e+00       2.000000e+00        66.0  ...   \n50%             7.000000e+00       2.000000e+00        66.0  ...   \n75%             7.000000e+00       3.000000e+00        66.0  ...   \nmax             1.200000e+01       2.000000e+01        66.0  ...   \n\n       yardbuildingsqft26     yearbuilt  numberofstories  \\\ncount         2647.000000  2.925289e+06    682069.000000   \nmean           278.296562  1.964262e+03         1.401464   \nstd            369.731508  2.344132e+01         0.539076   \nmin             10.000000  1.801000e+03         1.000000   \n25%             96.000000  1.950000e+03         1.000000   \n50%            168.000000  1.963000e+03         1.000000   \n75%            320.000000  1.981000e+03         2.000000   \nmax           6141.000000  2.015000e+03        41.000000   \n\n       structuretaxvaluedollarcnt  taxvaluedollarcnt  assessmentyear  \\\ncount                2.930235e+06       2.942667e+06    2.973778e+06   \nmean                 1.708836e+05       4.204790e+05    2.014999e+03   \nstd                  4.020683e+05       7.263467e+05    3.683161e-02   \nmin                  1.000000e+00       1.000000e+00    2.000000e+03   \n25%                  7.480000e+04       1.796750e+05    2.015000e+03   \n50%                  1.225900e+05       3.060860e+05    2.015000e+03   \n75%                  1.968890e+05       4.880000e+05    2.015000e+03   \nmax                  2.514860e+08       2.827860e+08    2.016000e+03   \n\n       landtaxvaluedollarcnt     taxamount  taxdelinquencyyear  \\\ncount           2.917484e+06  2.953967e+06        56464.000000   \nmean            2.524780e+05  5.377607e+03           13.892409   \nstd             4.450132e+05  9.183107e+03            2.581006   \nmin             1.000000e+00  1.340000e+00            0.000000   \n25%             7.483600e+04  2.461070e+03           14.000000   \n50%             1.670420e+05  3.991780e+03           14.000000   \n75%             3.069180e+05  6.201005e+03           15.000000   \nmax             9.024622e+07  3.458861e+06           99.000000   \n\n       censustractandblock  \ncount         2.910091e+06  \nmean          6.048431e+13  \nstd           3.249035e+11  \nmin          -1.000000e+00  \n25%           6.037400e+13  \n50%           6.037572e+13  \n75%           6.059042e+13  \nmax           4.830301e+14  \n\n[8 rows x 53 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>airconditioningtypeid</th>\n      <th>architecturalstyletypeid</th>\n      <th>basementsqft</th>\n      <th>bathroomcnt</th>\n      <th>bedroomcnt</th>\n      <th>buildingclasstypeid</th>\n      <th>buildingqualitytypeid</th>\n      <th>calculatedbathnbr</th>\n      <th>decktypeid</th>\n      <th>...</th>\n      <th>yardbuildingsqft26</th>\n      <th>yearbuilt</th>\n      <th>numberofstories</th>\n      <th>structuretaxvaluedollarcnt</th>\n      <th>taxvaluedollarcnt</th>\n      <th>assessmentyear</th>\n      <th>landtaxvaluedollarcnt</th>\n      <th>taxamount</th>\n      <th>taxdelinquencyyear</th>\n      <th>censustractandblock</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>2.985217e+06</td>\n      <td>811519.000000</td>\n      <td>6061.000000</td>\n      <td>1628.000000</td>\n      <td>2.973755e+06</td>\n      <td>2.973767e+06</td>\n      <td>12629.000000</td>\n      <td>1.938488e+06</td>\n      <td>2.856305e+06</td>\n      <td>17096.0</td>\n      <td>...</td>\n      <td>2647.000000</td>\n      <td>2.925289e+06</td>\n      <td>682069.000000</td>\n      <td>2.930235e+06</td>\n      <td>2.942667e+06</td>\n      <td>2.973778e+06</td>\n      <td>2.917484e+06</td>\n      <td>2.953967e+06</td>\n      <td>56464.000000</td>\n      <td>2.910091e+06</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.332586e+07</td>\n      <td>1.931166</td>\n      <td>7.202607</td>\n      <td>646.883292</td>\n      <td>2.209143e+00</td>\n      <td>3.088949e+00</td>\n      <td>3.725948</td>\n      <td>5.784787e+00</td>\n      <td>2.299263e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>278.296562</td>\n      <td>1.964262e+03</td>\n      <td>1.401464</td>\n      <td>1.708836e+05</td>\n      <td>4.204790e+05</td>\n      <td>2.014999e+03</td>\n      <td>2.524780e+05</td>\n      <td>5.377607e+03</td>\n      <td>13.892409</td>\n      <td>6.048431e+13</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.909966e+06</td>\n      <td>3.148587</td>\n      <td>2.436290</td>\n      <td>538.793473</td>\n      <td>1.077754e+00</td>\n      <td>1.275859e+00</td>\n      <td>0.501700</td>\n      <td>1.805352e+00</td>\n      <td>1.000736e+00</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>369.731508</td>\n      <td>2.344132e+01</td>\n      <td>0.539076</td>\n      <td>4.020683e+05</td>\n      <td>7.263467e+05</td>\n      <td>3.683161e-02</td>\n      <td>4.450132e+05</td>\n      <td>9.183107e+03</td>\n      <td>2.581006</td>\n      <td>3.249035e+11</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.071172e+07</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>20.000000</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>1.000000</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>10.000000</td>\n      <td>1.801000e+03</td>\n      <td>1.000000</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>2.000000e+03</td>\n      <td>1.000000e+00</td>\n      <td>1.340000e+00</td>\n      <td>0.000000</td>\n      <td>-1.000000e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.164371e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>272.000000</td>\n      <td>2.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>3.000000</td>\n      <td>4.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>96.000000</td>\n      <td>1.950000e+03</td>\n      <td>1.000000</td>\n      <td>7.480000e+04</td>\n      <td>1.796750e+05</td>\n      <td>2.015000e+03</td>\n      <td>7.483600e+04</td>\n      <td>2.461070e+03</td>\n      <td>14.000000</td>\n      <td>6.037400e+13</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.254509e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>534.000000</td>\n      <td>2.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>4.000000</td>\n      <td>7.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>168.000000</td>\n      <td>1.963000e+03</td>\n      <td>1.000000</td>\n      <td>1.225900e+05</td>\n      <td>3.060860e+05</td>\n      <td>2.015000e+03</td>\n      <td>1.670420e+05</td>\n      <td>3.991780e+03</td>\n      <td>14.000000</td>\n      <td>6.037572e+13</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.409712e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>847.250000</td>\n      <td>3.000000e+00</td>\n      <td>4.000000e+00</td>\n      <td>4.000000</td>\n      <td>7.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>320.000000</td>\n      <td>1.981000e+03</td>\n      <td>2.000000</td>\n      <td>1.968890e+05</td>\n      <td>4.880000e+05</td>\n      <td>2.015000e+03</td>\n      <td>3.069180e+05</td>\n      <td>6.201005e+03</td>\n      <td>15.000000</td>\n      <td>6.059042e+13</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.696019e+08</td>\n      <td>13.000000</td>\n      <td>27.000000</td>\n      <td>8516.000000</td>\n      <td>2.000000e+01</td>\n      <td>2.000000e+01</td>\n      <td>5.000000</td>\n      <td>1.200000e+01</td>\n      <td>2.000000e+01</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>6141.000000</td>\n      <td>2.015000e+03</td>\n      <td>41.000000</td>\n      <td>2.514860e+08</td>\n      <td>2.827860e+08</td>\n      <td>2.016000e+03</td>\n      <td>9.024622e+07</td>\n      <td>3.458861e+06</td>\n      <td>99.000000</td>\n      <td>4.830301e+14</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 53 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"properties2016.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:50.469486Z","iopub.execute_input":"2024-04-11T03:03:50.469873Z","iopub.status.idle":"2024-04-11T03:03:50.485106Z","shell.execute_reply.started":"2024-04-11T03:03:50.469841Z","shell.execute_reply":"2024-04-11T03:03:50.483918Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2985217 entries, 0 to 2985216\nData columns (total 58 columns):\n #   Column                        Dtype  \n---  ------                        -----  \n 0   parcelid                      int64  \n 1   airconditioningtypeid         float64\n 2   architecturalstyletypeid      float64\n 3   basementsqft                  float64\n 4   bathroomcnt                   float64\n 5   bedroomcnt                    float64\n 6   buildingclasstypeid           float64\n 7   buildingqualitytypeid         float64\n 8   calculatedbathnbr             float64\n 9   decktypeid                    float64\n 10  finishedfloor1squarefeet      float64\n 11  calculatedfinishedsquarefeet  float64\n 12  finishedsquarefeet12          float64\n 13  finishedsquarefeet13          float64\n 14  finishedsquarefeet15          float64\n 15  finishedsquarefeet50          float64\n 16  finishedsquarefeet6           float64\n 17  fips                          float64\n 18  fireplacecnt                  float64\n 19  fullbathcnt                   float64\n 20  garagecarcnt                  float64\n 21  garagetotalsqft               float64\n 22  hashottuborspa                object \n 23  heatingorsystemtypeid         float64\n 24  latitude                      float64\n 25  longitude                     float64\n 26  lotsizesquarefeet             float64\n 27  poolcnt                       float64\n 28  poolsizesum                   float64\n 29  pooltypeid10                  float64\n 30  pooltypeid2                   float64\n 31  pooltypeid7                   float64\n 32  propertycountylandusecode     object \n 33  propertylandusetypeid         float64\n 34  propertyzoningdesc            object \n 35  rawcensustractandblock        float64\n 36  regionidcity                  float64\n 37  regionidcounty                float64\n 38  regionidneighborhood          float64\n 39  regionidzip                   float64\n 40  roomcnt                       float64\n 41  storytypeid                   float64\n 42  threequarterbathnbr           float64\n 43  typeconstructiontypeid        float64\n 44  unitcnt                       float64\n 45  yardbuildingsqft17            float64\n 46  yardbuildingsqft26            float64\n 47  yearbuilt                     float64\n 48  numberofstories               float64\n 49  fireplaceflag                 object \n 50  structuretaxvaluedollarcnt    float64\n 51  taxvaluedollarcnt             float64\n 52  assessmentyear                float64\n 53  landtaxvaluedollarcnt         float64\n 54  taxamount                     float64\n 55  taxdelinquencyflag            object \n 56  taxdelinquencyyear            float64\n 57  censustractandblock           float64\ndtypes: float64(52), int64(1), object(5)\nmemory usage: 1.3+ GB\n","output_type":"stream"}]},{"cell_type":"code","source":"properties2016.isnull().sum()/len(properties2016)*100","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:50.486536Z","iopub.execute_input":"2024-04-11T03:03:50.486878Z","iopub.status.idle":"2024-04-11T03:03:51.254009Z","shell.execute_reply.started":"2024-04-11T03:03:50.486852Z","shell.execute_reply":"2024-04-11T03:03:51.252811Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"parcelid                         0.000000\nairconditioningtypeid           72.815410\narchitecturalstyletypeid        99.796966\nbasementsqft                    99.945465\nbathroomcnt                      0.383959\nbedroomcnt                       0.383557\nbuildingclasstypeid             99.576949\nbuildingqualitytypeid           35.063749\ncalculatedbathnbr                4.318346\ndecktypeid                      99.427311\nfinishedfloor1squarefeet        93.209304\ncalculatedfinishedsquarefeet     1.861339\nfinishedsquarefeet12             9.246664\nfinishedsquarefeet13            99.743000\nfinishedsquarefeet15            93.608572\nfinishedsquarefeet50            93.209304\nfinishedsquarefeet6             99.263002\nfips                             0.383121\nfireplacecnt                    89.527160\nfullbathcnt                      4.318346\ngaragecarcnt                    70.411967\ngaragetotalsqft                 70.411967\nhashottuborspa                  97.688141\nheatingorsystemtypeid           39.488453\nlatitude                         0.383121\nlongitude                        0.383121\nlotsizesquarefeet                9.248875\npoolcnt                         82.663438\npoolsizesum                     99.063385\npooltypeid10                    98.762603\npooltypeid2                     98.925539\npooltypeid7                     83.737899\npropertycountylandusecode        0.411260\npropertylandusetypeid            0.383121\npropertyzoningdesc              33.719090\nrawcensustractandblock           0.383121\nregionidcity                     2.105207\nregionidcounty                   0.383121\nregionidneighborhood            61.262381\nregionidzip                      0.468308\nroomcnt                          0.384394\nstorytypeid                     99.945599\nthreequarterbathnbr             89.560859\ntypeconstructiontypeid          99.773986\nunitcnt                         33.757244\nyardbuildingsqft17              97.308236\nyardbuildingsqft26              99.911330\nyearbuilt                        2.007492\nnumberofstories                 77.151778\nfireplaceflag                   99.827048\nstructuretaxvaluedollarcnt       1.841809\ntaxvaluedollarcnt                1.425357\nassessmentyear                   0.383188\nlandtaxvaluedollarcnt            2.268947\ntaxamount                        1.046825\ntaxdelinquencyflag              98.108613\ntaxdelinquencyyear              98.108546\ncensustractandblock              2.516601\ndtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"properties2017.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:51.255476Z","iopub.execute_input":"2024-04-11T03:03:51.255907Z","iopub.status.idle":"2024-04-11T03:03:51.289381Z","shell.execute_reply.started":"2024-04-11T03:03:51.255867Z","shell.execute_reply":"2024-04-11T03:03:51.288123Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"   parcelid  airconditioningtypeid  architecturalstyletypeid  basementsqft  \\\n0  10754147                    NaN                       NaN           NaN   \n1  10759547                    NaN                       NaN           NaN   \n2  10843547                    NaN                       NaN           NaN   \n3  10859147                    NaN                       NaN           NaN   \n4  10879947                    NaN                       NaN           NaN   \n\n   bathroomcnt  bedroomcnt  buildingclasstypeid  buildingqualitytypeid  \\\n0          0.0         0.0                  NaN                    NaN   \n1          0.0         0.0                  NaN                    NaN   \n2          0.0         0.0                  5.0                    NaN   \n3          0.0         0.0                  3.0                    6.0   \n4          0.0         0.0                  4.0                    NaN   \n\n   calculatedbathnbr  decktypeid  ...  numberofstories  fireplaceflag  \\\n0                NaN         NaN  ...              NaN            NaN   \n1                NaN         NaN  ...              NaN            NaN   \n2                NaN         NaN  ...              1.0            NaN   \n3                NaN         NaN  ...              1.0            NaN   \n4                NaN         NaN  ...              1.0            NaN   \n\n   structuretaxvaluedollarcnt  taxvaluedollarcnt  assessmentyear  \\\n0                         NaN                9.0          2016.0   \n1                         NaN            27516.0          2015.0   \n2                    660680.0          1434941.0          2016.0   \n3                    580059.0          1174475.0          2016.0   \n4                    196751.0           440101.0          2016.0   \n\n   landtaxvaluedollarcnt  taxamount  taxdelinquencyflag  taxdelinquencyyear  \\\n0                    9.0        NaN                 NaN                 NaN   \n1                27516.0        NaN                 NaN                 NaN   \n2               774261.0   20800.37                 NaN                 NaN   \n3               594416.0   14557.57                 NaN                 NaN   \n4               243350.0    5725.17                 NaN                 NaN   \n\n   censustractandblock  \n0                  NaN  \n1                  NaN  \n2                  NaN  \n3                  NaN  \n4                  NaN  \n\n[5 rows x 58 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>airconditioningtypeid</th>\n      <th>architecturalstyletypeid</th>\n      <th>basementsqft</th>\n      <th>bathroomcnt</th>\n      <th>bedroomcnt</th>\n      <th>buildingclasstypeid</th>\n      <th>buildingqualitytypeid</th>\n      <th>calculatedbathnbr</th>\n      <th>decktypeid</th>\n      <th>...</th>\n      <th>numberofstories</th>\n      <th>fireplaceflag</th>\n      <th>structuretaxvaluedollarcnt</th>\n      <th>taxvaluedollarcnt</th>\n      <th>assessmentyear</th>\n      <th>landtaxvaluedollarcnt</th>\n      <th>taxamount</th>\n      <th>taxdelinquencyflag</th>\n      <th>taxdelinquencyyear</th>\n      <th>censustractandblock</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10754147</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>9.0</td>\n      <td>2016.0</td>\n      <td>9.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10759547</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>27516.0</td>\n      <td>2015.0</td>\n      <td>27516.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10843547</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>660680.0</td>\n      <td>1434941.0</td>\n      <td>2016.0</td>\n      <td>774261.0</td>\n      <td>20800.37</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10859147</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.0</td>\n      <td>6.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>580059.0</td>\n      <td>1174475.0</td>\n      <td>2016.0</td>\n      <td>594416.0</td>\n      <td>14557.57</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10879947</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>196751.0</td>\n      <td>440101.0</td>\n      <td>2016.0</td>\n      <td>243350.0</td>\n      <td>5725.17</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 58 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"properties2017.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:51.291018Z","iopub.execute_input":"2024-04-11T03:03:51.291451Z","iopub.status.idle":"2024-04-11T03:03:59.037625Z","shell.execute_reply.started":"2024-04-11T03:03:51.291420Z","shell.execute_reply":"2024-04-11T03:03:59.036287Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"           parcelid  airconditioningtypeid  architecturalstyletypeid  \\\ncount  2.985217e+06          815362.000000               6061.000000   \nmean   1.332586e+07               1.945723                  7.202607   \nstd    7.909966e+06               3.160507                  2.436290   \nmin    1.071172e+07               1.000000                  2.000000   \n25%    1.164371e+07               1.000000                  7.000000   \n50%    1.254509e+07               1.000000                  7.000000   \n75%    1.409712e+07               1.000000                  7.000000   \nmax    1.696019e+08              13.000000                 27.000000   \n\n       basementsqft   bathroomcnt    bedroomcnt  buildingclasstypeid  \\\ncount   1627.000000  2.982260e+06  2.982272e+06         12731.000000   \nmean     647.220652  2.216196e+00  3.093362e+00             3.734742   \nstd      538.787104  1.078250e+00  1.271569e+00             0.500371   \nmin       20.000000  0.000000e+00  0.000000e+00             1.000000   \n25%      272.000000  2.000000e+00  2.000000e+00             3.000000   \n50%      535.000000  2.000000e+00  3.000000e+00             4.000000   \n75%      847.500000  3.000000e+00  4.000000e+00             4.000000   \nmax     8516.000000  3.200000e+01  2.500000e+01             5.000000   \n\n       buildingqualitytypeid  calculatedbathnbr  decktypeid  ...  \\\ncount           1.941395e+06       2.868061e+06     17379.0  ...   \nmean            6.280822e+00       2.303826e+00        66.0  ...   \nstd             1.729923e+00       1.003243e+00         0.0  ...   \nmin             1.000000e+00       1.000000e+00        66.0  ...   \n25%             5.000000e+00       2.000000e+00        66.0  ...   \n50%             6.000000e+00       2.000000e+00        66.0  ...   \n75%             8.000000e+00       3.000000e+00        66.0  ...   \nmax             1.200000e+01       3.200000e+01        66.0  ...   \n\n       yardbuildingsqft26     yearbuilt  numberofstories  \\\ncount         2646.000000  2.937384e+06    685676.000000   \nmean           278.365457  1.964438e+03         1.400956   \nstd            369.784399  2.364428e+01         0.539056   \nmin             10.000000  1.801000e+03         1.000000   \n25%             96.000000  1.950000e+03         1.000000   \n50%            168.000000  1.963000e+03         1.000000   \n75%            320.000000  1.981000e+03         2.000000   \nmax           6141.000000  2.016000e+03        41.000000   \n\n       structuretaxvaluedollarcnt  taxvaluedollarcnt  assessmentyear  \\\ncount                2.938753e+06       2.950951e+06    2.982284e+06   \nmean                 1.781429e+05       4.435279e+05    2.015998e+03   \nstd                  4.600503e+05       8.163366e+05    6.039949e-02   \nmin                  1.000000e+00       1.000000e+00    2.000000e+03   \n25%                  7.766600e+04       1.882200e+05    2.016000e+03   \n50%                  1.270660e+05       3.211610e+05    2.016000e+03   \n75%                  2.040000e+05       5.140720e+05    2.016000e+03   \nmax                  2.553212e+08       3.196225e+08    2.016000e+03   \n\n       landtaxvaluedollarcnt     taxamount  taxdelinquencyyear  \\\ncount           2.925291e+06  2.962465e+06        56517.000000   \nmean            2.684558e+05  5.408949e+03           13.891696   \nstd             4.865097e+05  9.675567e+03            2.562172   \nmin             1.000000e+00  2.400000e-01            0.000000   \n25%             7.970000e+04  2.468620e+03           14.000000   \n50%             1.766190e+05  4.007620e+03           14.000000   \n75%             3.261000e+05  6.230500e+03           15.000000   \nmax             9.401108e+07  3.823176e+06           99.000000   \n\n       censustractandblock  \ncount         2.910232e+06  \nmean          6.048434e+13  \nstd           3.249133e+11  \nmin          -1.000000e+00  \n25%           6.037400e+13  \n50%           6.037572e+13  \n75%           6.059042e+13  \nmax           4.830301e+14  \n\n[8 rows x 53 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>airconditioningtypeid</th>\n      <th>architecturalstyletypeid</th>\n      <th>basementsqft</th>\n      <th>bathroomcnt</th>\n      <th>bedroomcnt</th>\n      <th>buildingclasstypeid</th>\n      <th>buildingqualitytypeid</th>\n      <th>calculatedbathnbr</th>\n      <th>decktypeid</th>\n      <th>...</th>\n      <th>yardbuildingsqft26</th>\n      <th>yearbuilt</th>\n      <th>numberofstories</th>\n      <th>structuretaxvaluedollarcnt</th>\n      <th>taxvaluedollarcnt</th>\n      <th>assessmentyear</th>\n      <th>landtaxvaluedollarcnt</th>\n      <th>taxamount</th>\n      <th>taxdelinquencyyear</th>\n      <th>censustractandblock</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>2.985217e+06</td>\n      <td>815362.000000</td>\n      <td>6061.000000</td>\n      <td>1627.000000</td>\n      <td>2.982260e+06</td>\n      <td>2.982272e+06</td>\n      <td>12731.000000</td>\n      <td>1.941395e+06</td>\n      <td>2.868061e+06</td>\n      <td>17379.0</td>\n      <td>...</td>\n      <td>2646.000000</td>\n      <td>2.937384e+06</td>\n      <td>685676.000000</td>\n      <td>2.938753e+06</td>\n      <td>2.950951e+06</td>\n      <td>2.982284e+06</td>\n      <td>2.925291e+06</td>\n      <td>2.962465e+06</td>\n      <td>56517.000000</td>\n      <td>2.910232e+06</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.332586e+07</td>\n      <td>1.945723</td>\n      <td>7.202607</td>\n      <td>647.220652</td>\n      <td>2.216196e+00</td>\n      <td>3.093362e+00</td>\n      <td>3.734742</td>\n      <td>6.280822e+00</td>\n      <td>2.303826e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>278.365457</td>\n      <td>1.964438e+03</td>\n      <td>1.400956</td>\n      <td>1.781429e+05</td>\n      <td>4.435279e+05</td>\n      <td>2.015998e+03</td>\n      <td>2.684558e+05</td>\n      <td>5.408949e+03</td>\n      <td>13.891696</td>\n      <td>6.048434e+13</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.909966e+06</td>\n      <td>3.160507</td>\n      <td>2.436290</td>\n      <td>538.787104</td>\n      <td>1.078250e+00</td>\n      <td>1.271569e+00</td>\n      <td>0.500371</td>\n      <td>1.729923e+00</td>\n      <td>1.003243e+00</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>369.784399</td>\n      <td>2.364428e+01</td>\n      <td>0.539056</td>\n      <td>4.600503e+05</td>\n      <td>8.163366e+05</td>\n      <td>6.039949e-02</td>\n      <td>4.865097e+05</td>\n      <td>9.675567e+03</td>\n      <td>2.562172</td>\n      <td>3.249133e+11</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.071172e+07</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>20.000000</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>1.000000</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>10.000000</td>\n      <td>1.801000e+03</td>\n      <td>1.000000</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>2.000000e+03</td>\n      <td>1.000000e+00</td>\n      <td>2.400000e-01</td>\n      <td>0.000000</td>\n      <td>-1.000000e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.164371e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>272.000000</td>\n      <td>2.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>3.000000</td>\n      <td>5.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>96.000000</td>\n      <td>1.950000e+03</td>\n      <td>1.000000</td>\n      <td>7.766600e+04</td>\n      <td>1.882200e+05</td>\n      <td>2.016000e+03</td>\n      <td>7.970000e+04</td>\n      <td>2.468620e+03</td>\n      <td>14.000000</td>\n      <td>6.037400e+13</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.254509e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>535.000000</td>\n      <td>2.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>4.000000</td>\n      <td>6.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>168.000000</td>\n      <td>1.963000e+03</td>\n      <td>1.000000</td>\n      <td>1.270660e+05</td>\n      <td>3.211610e+05</td>\n      <td>2.016000e+03</td>\n      <td>1.766190e+05</td>\n      <td>4.007620e+03</td>\n      <td>14.000000</td>\n      <td>6.037572e+13</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.409712e+07</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>847.500000</td>\n      <td>3.000000e+00</td>\n      <td>4.000000e+00</td>\n      <td>4.000000</td>\n      <td>8.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>320.000000</td>\n      <td>1.981000e+03</td>\n      <td>2.000000</td>\n      <td>2.040000e+05</td>\n      <td>5.140720e+05</td>\n      <td>2.016000e+03</td>\n      <td>3.261000e+05</td>\n      <td>6.230500e+03</td>\n      <td>15.000000</td>\n      <td>6.059042e+13</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.696019e+08</td>\n      <td>13.000000</td>\n      <td>27.000000</td>\n      <td>8516.000000</td>\n      <td>3.200000e+01</td>\n      <td>2.500000e+01</td>\n      <td>5.000000</td>\n      <td>1.200000e+01</td>\n      <td>3.200000e+01</td>\n      <td>66.0</td>\n      <td>...</td>\n      <td>6141.000000</td>\n      <td>2.016000e+03</td>\n      <td>41.000000</td>\n      <td>2.553212e+08</td>\n      <td>3.196225e+08</td>\n      <td>2.016000e+03</td>\n      <td>9.401108e+07</td>\n      <td>3.823176e+06</td>\n      <td>99.000000</td>\n      <td>4.830301e+14</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 53 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"properties2017.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:59.040907Z","iopub.execute_input":"2024-04-11T03:03:59.041299Z","iopub.status.idle":"2024-04-11T03:03:59.057723Z","shell.execute_reply.started":"2024-04-11T03:03:59.041267Z","shell.execute_reply":"2024-04-11T03:03:59.056217Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2985217 entries, 0 to 2985216\nData columns (total 58 columns):\n #   Column                        Dtype  \n---  ------                        -----  \n 0   parcelid                      int64  \n 1   airconditioningtypeid         float64\n 2   architecturalstyletypeid      float64\n 3   basementsqft                  float64\n 4   bathroomcnt                   float64\n 5   bedroomcnt                    float64\n 6   buildingclasstypeid           float64\n 7   buildingqualitytypeid         float64\n 8   calculatedbathnbr             float64\n 9   decktypeid                    float64\n 10  finishedfloor1squarefeet      float64\n 11  calculatedfinishedsquarefeet  float64\n 12  finishedsquarefeet12          float64\n 13  finishedsquarefeet13          float64\n 14  finishedsquarefeet15          float64\n 15  finishedsquarefeet50          float64\n 16  finishedsquarefeet6           float64\n 17  fips                          float64\n 18  fireplacecnt                  float64\n 19  fullbathcnt                   float64\n 20  garagecarcnt                  float64\n 21  garagetotalsqft               float64\n 22  hashottuborspa                object \n 23  heatingorsystemtypeid         float64\n 24  latitude                      float64\n 25  longitude                     float64\n 26  lotsizesquarefeet             float64\n 27  poolcnt                       float64\n 28  poolsizesum                   float64\n 29  pooltypeid10                  float64\n 30  pooltypeid2                   float64\n 31  pooltypeid7                   float64\n 32  propertycountylandusecode     object \n 33  propertylandusetypeid         float64\n 34  propertyzoningdesc            object \n 35  rawcensustractandblock        float64\n 36  regionidcity                  float64\n 37  regionidcounty                float64\n 38  regionidneighborhood          float64\n 39  regionidzip                   float64\n 40  roomcnt                       float64\n 41  storytypeid                   float64\n 42  threequarterbathnbr           float64\n 43  typeconstructiontypeid        float64\n 44  unitcnt                       float64\n 45  yardbuildingsqft17            float64\n 46  yardbuildingsqft26            float64\n 47  yearbuilt                     float64\n 48  numberofstories               float64\n 49  fireplaceflag                 object \n 50  structuretaxvaluedollarcnt    float64\n 51  taxvaluedollarcnt             float64\n 52  assessmentyear                float64\n 53  landtaxvaluedollarcnt         float64\n 54  taxamount                     float64\n 55  taxdelinquencyflag            object \n 56  taxdelinquencyyear            float64\n 57  censustractandblock           float64\ndtypes: float64(52), int64(1), object(5)\nmemory usage: 1.3+ GB\n","output_type":"stream"}]},{"cell_type":"code","source":"#checking percentage of null values\nproperties2017.isnull().sum()/len(properties2017) * 100","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:59.059972Z","iopub.execute_input":"2024-04-11T03:03:59.060560Z","iopub.status.idle":"2024-04-11T03:03:59.828221Z","shell.execute_reply.started":"2024-04-11T03:03:59.060518Z","shell.execute_reply":"2024-04-11T03:03:59.826942Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"parcelid                         0.000000\nairconditioningtypeid           72.686676\narchitecturalstyletypeid        99.796966\nbasementsqft                    99.945498\nbathroomcnt                      0.099055\nbedroomcnt                       0.098653\nbuildingclasstypeid             99.573532\nbuildingqualitytypeid           34.966369\ncalculatedbathnbr                3.924539\ndecktypeid                      99.417831\nfinishedfloor1squarefeet        93.174433\ncalculatedfinishedsquarefeet     1.510677\nfinishedsquarefeet12             8.858016\nfinishedsquarefeet13            99.743034\nfinishedsquarefeet15            93.629106\nfinishedsquarefeet50            93.174433\nfinishedsquarefeet6             99.280387\nfips                             0.098217\nfireplacecnt                    89.510846\nfullbathcnt                      3.924539\ngaragecarcnt                    70.152656\ngaragetotalsqft                 70.152656\nhashottuborspa                  98.323003\nheatingorsystemtypeid           37.385992\nlatitude                         0.098217\nlongitude                        0.098217\nlotsizesquarefeet                9.135215\npoolcnt                         81.923190\npoolsizesum                     99.063452\npooltypeid10                    99.430326\npooltypeid2                     98.892677\npooltypeid7                     83.053326\npropertycountylandusecode        0.100462\npropertylandusetypeid            0.098217\npropertyzoningdesc              33.590389\nrawcensustractandblock           0.098217\nregionidcity                     2.081189\nregionidcounty                   0.098217\nregionidneighborhood            61.251025\nregionidzip                      0.425899\nroomcnt                          0.099457\nstorytypeid                     99.945632\nthreequarterbathnbr             89.402546\ntypeconstructiontypeid          99.774020\nunitcnt                         33.638258\nyardbuildingsqft17              97.266932\nyardbuildingsqft26              99.911363\nyearbuilt                        1.602329\nnumberofstories                 77.030950\nfireplaceflag                   99.827048\nstructuretaxvaluedollarcnt       1.556470\ntaxvaluedollarcnt                1.147856\nassessmentyear                   0.098251\nlandtaxvaluedollarcnt            2.007425\ntaxamount                        0.762156\ntaxdelinquencyflag              98.106838\ntaxdelinquencyyear              98.106771\ncensustractandblock              2.511878\ndtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train2016.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:59.829760Z","iopub.execute_input":"2024-04-11T03:03:59.830567Z","iopub.status.idle":"2024-04-11T03:03:59.846916Z","shell.execute_reply.started":"2024-04-11T03:03:59.830536Z","shell.execute_reply":"2024-04-11T03:03:59.845539Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"   parcelid  logerror transactiondate\n0  11016594    0.0276      2016-01-01\n1  14366692   -0.1684      2016-01-01\n2  12098116   -0.0040      2016-01-01\n3  12643413    0.0218      2016-01-02\n4  14432541   -0.0050      2016-01-02","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>logerror</th>\n      <th>transactiondate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11016594</td>\n      <td>0.0276</td>\n      <td>2016-01-01</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>14366692</td>\n      <td>-0.1684</td>\n      <td>2016-01-01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12098116</td>\n      <td>-0.0040</td>\n      <td>2016-01-01</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>12643413</td>\n      <td>0.0218</td>\n      <td>2016-01-02</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14432541</td>\n      <td>-0.0050</td>\n      <td>2016-01-02</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train2017.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:59.848472Z","iopub.execute_input":"2024-04-11T03:03:59.848880Z","iopub.status.idle":"2024-04-11T03:03:59.862621Z","shell.execute_reply.started":"2024-04-11T03:03:59.848848Z","shell.execute_reply":"2024-04-11T03:03:59.861165Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"   parcelid  logerror transactiondate\n0  14297519  0.025595      2017-01-01\n1  17052889  0.055619      2017-01-01\n2  14186244  0.005383      2017-01-01\n3  12177905 -0.103410      2017-01-01\n4  10887214  0.006940      2017-01-01","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parcelid</th>\n      <th>logerror</th>\n      <th>transactiondate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>14297519</td>\n      <td>0.025595</td>\n      <td>2017-01-01</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>17052889</td>\n      <td>0.055619</td>\n      <td>2017-01-01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>14186244</td>\n      <td>0.005383</td>\n      <td>2017-01-01</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>12177905</td>\n      <td>-0.103410</td>\n      <td>2017-01-01</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10887214</td>\n      <td>0.006940</td>\n      <td>2017-01-01</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Lets check the records of properties dataset for 2017 record","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:03:59.864372Z","iopub.execute_input":"2024-04-11T03:03:59.864784Z","iopub.status.idle":"2024-04-11T03:03:59.872398Z","shell.execute_reply.started":"2024-04-11T03:03:59.864754Z","shell.execute_reply":"2024-04-11T03:03:59.871242Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## STEP 3 : Feature Engineering","metadata":{}},{"cell_type":"code","source":"def add_date_features(df):\n    df[\"transaction_year\"] = df[\"transactiondate\"].dt.year\n    df[\"transaction_month\"] = (df[\"transactiondate\"].dt.year - 2016)*12 + df[\"transactiondate\"].dt.month\n    df[\"transaction_day\"] = df[\"transactiondate\"].dt.day\n    df[\"transaction_quarter\"] = (df[\"transactiondate\"].dt.year - 2016)*4 +df[\"transactiondate\"].dt.quarter\n    df.drop([\"transactiondate\"], inplace=True, axis=1)\n    return df\n\ntrain2016 = add_date_features(train2016)\ntrain2017 = add_date_features(train2017)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:13.578140Z","iopub.execute_input":"2024-04-11T03:06:13.579732Z","iopub.status.idle":"2024-04-11T03:06:13.640723Z","shell.execute_reply.started":"2024-04-11T03:06:13.579670Z","shell.execute_reply":"2024-04-11T03:06:13.639056Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"print('Tax Features 2017  ...')\ntrain2017.iloc[:, train2017.columns.str.startswith('tax')] = np.nan","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:14.798916Z","iopub.execute_input":"2024-04-11T03:06:14.799361Z","iopub.status.idle":"2024-04-11T03:06:14.807106Z","shell.execute_reply.started":"2024-04-11T03:06:14.799328Z","shell.execute_reply":"2024-04-11T03:06:14.805521Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"Tax Features 2017  ...\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Merge Train with Properties ...')\ntrain2016 = pd.merge(train2016, properties2016, how = 'left', on = 'parcelid')\ntrain2017 = pd.merge(train2017, properties2017, how = 'left', on = 'parcelid')","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:16.258844Z","iopub.execute_input":"2024-04-11T03:06:16.259578Z","iopub.status.idle":"2024-04-11T03:06:20.105095Z","shell.execute_reply.started":"2024-04-11T03:06:16.259536Z","shell.execute_reply":"2024-04-11T03:06:20.103645Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stdout","text":"Merge Train with Properties ...\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Concat Train 2016 & 2017 ...')\ntrain_df = pd.concat([train2016, train2017], axis = 0)\ntest_df = pd.merge(sample_submission[['ParcelId']], properties2016.rename(columns = {'parcelid': 'ParcelId'}), how = 'left', on = 'ParcelId')\n\ndel properties2016, properties2017, train2016, train2017\ngc.collect();","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:34.899226Z","iopub.execute_input":"2024-04-11T03:06:34.901352Z","iopub.status.idle":"2024-04-11T03:06:41.155361Z","shell.execute_reply.started":"2024-04-11T03:06:34.901238Z","shell.execute_reply":"2024-04-11T03:06:41.153778Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"Concat Train 2016 & 2017 ...\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Remove missing data fields ...')\n\nmissing_perc_thresh = 0.98\nexclude_missing = []\nnum_rows = train_df.shape[0]\nfor c in train_df.columns:\n    num_missing = train_df[c].isnull().sum()\n    if num_missing == 0:\n        continue\n    missing_frac = num_missing / float(num_rows)\n    if missing_frac > missing_perc_thresh:\n        exclude_missing.append(c)\nprint(\"We exclude: %s\" % len(exclude_missing))","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.157563Z","iopub.execute_input":"2024-04-11T03:06:41.157938Z","iopub.status.idle":"2024-04-11T03:06:41.271823Z","shell.execute_reply.started":"2024-04-11T03:06:41.157910Z","shell.execute_reply":"2024-04-11T03:06:41.270499Z"},"trusted":true},"execution_count":57,"outputs":[{"name":"stdout","text":"Remove missing data fields ...\nWe exclude: 13\n","output_type":"stream"}]},{"cell_type":"code","source":"del num_rows, missing_perc_thresh\ngc.collect();","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.273500Z","iopub.execute_input":"2024-04-11T03:06:41.274777Z","iopub.status.idle":"2024-04-11T03:06:41.478086Z","shell.execute_reply.started":"2024-04-11T03:06:41.274725Z","shell.execute_reply":"2024-04-11T03:06:41.476642Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"code","source":"print (\"Remove features with one unique value !!\")\nexclude_unique = []\nfor c in train_df.columns:\n    num_uniques = len(train_df[c].unique())\n    if train_df[c].isnull().sum() != 0:\n        num_uniques -= 1\n    if num_uniques == 1:\n        exclude_unique.append(c)\nprint(\"We exclude: %s\" % len(exclude_unique))\n","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.482280Z","iopub.execute_input":"2024-04-11T03:06:41.483240Z","iopub.status.idle":"2024-04-11T03:06:41.771267Z","shell.execute_reply.started":"2024-04-11T03:06:41.483169Z","shell.execute_reply":"2024-04-11T03:06:41.769904Z"},"trusted":true},"execution_count":59,"outputs":[{"name":"stdout","text":"Remove features with one unique value !!\nWe exclude: 9\n","output_type":"stream"}]},{"cell_type":"code","source":"print (\"Define training features !!\")\nexclude_other = ['parcelid', 'logerror','propertyzoningdesc']\ntrain_features = []\nfor c in train_df.columns:\n    if c not in exclude_missing \\\n       and c not in exclude_other and c not in exclude_unique:\n        train_features.append(c)\nprint(\"We use these for training: %s\" % len(train_features))","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.774137Z","iopub.execute_input":"2024-04-11T03:06:41.774606Z","iopub.status.idle":"2024-04-11T03:06:41.783758Z","shell.execute_reply.started":"2024-04-11T03:06:41.774573Z","shell.execute_reply":"2024-04-11T03:06:41.782168Z"},"trusted":true},"execution_count":60,"outputs":[{"name":"stdout","text":"Define training features !!\nWe use these for training: 43\n","output_type":"stream"}]},{"cell_type":"code","source":"print (\"Define categorial features !!\")\ncat_feature_inds = []\ncat_unique_thresh = 1000\nfor i, c in enumerate(train_features):\n    num_uniques = len(train_df[c].unique())\n    if num_uniques < cat_unique_thresh \\\n       and not 'sqft' in c \\\n       and not 'cnt' in c \\\n       and not 'nbr' in c \\\n       and not 'number' in c:\n        cat_feature_inds.append(i)\n        \nprint(\"Cat features are: %s\" % [train_features[ind] for ind in cat_feature_inds])","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.786366Z","iopub.execute_input":"2024-04-11T03:06:41.787258Z","iopub.status.idle":"2024-04-11T03:06:41.938992Z","shell.execute_reply.started":"2024-04-11T03:06:41.787190Z","shell.execute_reply":"2024-04-11T03:06:41.937685Z"},"trusted":true},"execution_count":61,"outputs":[{"name":"stdout","text":"Define categorial features !!\nCat features are: ['transaction_year', 'transaction_month', 'transaction_day', 'transaction_quarter', 'airconditioningtypeid', 'buildingqualitytypeid', 'fips', 'heatingorsystemtypeid', 'propertycountylandusecode', 'propertylandusetypeid', 'regionidcity', 'regionidcounty', 'regionidneighborhood', 'regionidzip', 'yearbuilt', 'assessmentyear', 'taxdelinquencyyear']\n","output_type":"stream"}]},{"cell_type":"code","source":"\nprint (\"Replacing NaN values by -999 !!\")\ntrain_df.fillna(-999, inplace=True)\ntest_df.fillna(-999, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:41.940483Z","iopub.execute_input":"2024-04-11T03:06:41.940851Z","iopub.status.idle":"2024-04-11T03:06:51.396652Z","shell.execute_reply.started":"2024-04-11T03:06:41.940813Z","shell.execute_reply":"2024-04-11T03:06:51.395275Z"},"trusted":true},"execution_count":62,"outputs":[{"name":"stdout","text":"Replacing NaN values by -999 !!\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print (\"Training time !!\")\nX_train = train_df[train_features]\ny_train = train_df.logerror\nprint(X_train.shape, y_train.shape)\n\ntest_df['transactiondate'] = pd.Timestamp('2016-12-01') \ntest_df = add_date_features(test_df)\nX_test = test_df[train_features]\nprint(X_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:51.398280Z","iopub.execute_input":"2024-04-11T03:06:51.398717Z","iopub.status.idle":"2024-04-11T03:06:53.652919Z","shell.execute_reply.started":"2024-04-11T03:06:51.398680Z","shell.execute_reply":"2024-04-11T03:06:53.651385Z"},"trusted":true},"execution_count":63,"outputs":[{"name":"stdout","text":"Training time !!\n(167888, 43) (167888,)\n(2985217, 43)\n","output_type":"stream"}]},{"cell_type":"code","source":"for i in list(X_test.columns):\n    if X_test[i].dtype == 'float64' :\n       X_test[i] = X_test[i].astype(int)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i in list(X_train.columns):\n    if X_train[i].dtype == 'float64' :\n       X_train[i] = X_train[i].astype(int)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:16:06.381713Z","iopub.execute_input":"2024-04-11T03:16:06.382165Z","iopub.status.idle":"2024-04-11T03:16:06.436951Z","shell.execute_reply.started":"2024-04-11T03:16:06.382135Z","shell.execute_reply":"2024-04-11T03:16:06.435617Z"},"trusted":true},"execution_count":80,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n/tmp/ipykernel_33/4199641212.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_train[i] = X_train[i].astype(int)\n","output_type":"stream"}]},{"cell_type":"code","source":"num_ensembles = 5\ny_pred = 0.0\nfor i in tqdm(range(num_ensembles)):\n    model = CatBoostRegressor(\n        iterations=630, learning_rate=0.03,\n        depth=6, l2_leaf_reg=3,\n        loss_function='MAE',\n        eval_metric='MAE',\n        random_seed=i)\n    model.fit(\n        X_train, y_train,\n        cat_features=cat_feature_inds)\n    y_pred += model.predict(X_test)\ny_pred /= num_ensembles","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:16:13.765277Z","iopub.execute_input":"2024-04-11T03:16:13.766070Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"  0%|          | 0/5 [00:00<?, ?it/s]","output_type":"stream"},{"name":"stdout","text":"0:\tlearn: 0.0688420\ttotal: 535ms\tremaining: 5m 36s\n1:\tlearn: 0.0688239\ttotal: 947ms\tremaining: 4m 57s\n2:\tlearn: 0.0688065\ttotal: 1.38s\tremaining: 4m 48s\n3:\tlearn: 0.0687924\ttotal: 1.78s\tremaining: 4m 39s\n4:\tlearn: 0.0687772\ttotal: 2.21s\tremaining: 4m 36s\n5:\tlearn: 0.0687652\ttotal: 2.56s\tremaining: 4m 26s\n6:\tlearn: 0.0687542\ttotal: 2.95s\tremaining: 4m 22s\n7:\tlearn: 0.0687409\ttotal: 3.36s\tremaining: 4m 21s\n8:\tlearn: 0.0687287\ttotal: 3.76s\tremaining: 4m 19s\n9:\tlearn: 0.0687156\ttotal: 4.18s\tremaining: 4m 19s\n10:\tlearn: 0.0687034\ttotal: 4.54s\tremaining: 4m 15s\n11:\tlearn: 0.0686916\ttotal: 4.92s\tremaining: 4m 13s\n12:\tlearn: 0.0686797\ttotal: 5.28s\tremaining: 4m 10s\n13:\tlearn: 0.0686687\ttotal: 5.63s\tremaining: 4m 7s\n14:\tlearn: 0.0686600\ttotal: 5.98s\tremaining: 4m 5s\n15:\tlearn: 0.0686500\ttotal: 6.35s\tremaining: 4m 3s\n16:\tlearn: 0.0686404\ttotal: 6.74s\tremaining: 4m 2s\n17:\tlearn: 0.0686306\ttotal: 7.12s\tremaining: 4m 2s\n18:\tlearn: 0.0686217\ttotal: 7.55s\tremaining: 4m 2s\n19:\tlearn: 0.0686125\ttotal: 7.94s\tremaining: 4m 2s\n20:\tlearn: 0.0686053\ttotal: 8.39s\tremaining: 4m 3s\n21:\tlearn: 0.0685977\ttotal: 8.84s\tremaining: 4m 4s\n22:\tlearn: 0.0685891\ttotal: 9.25s\tremaining: 4m 4s\n23:\tlearn: 0.0685804\ttotal: 9.64s\tremaining: 4m 3s\n24:\tlearn: 0.0685742\ttotal: 10s\tremaining: 4m 2s\n25:\tlearn: 0.0685669\ttotal: 10.4s\tremaining: 4m 1s\n26:\tlearn: 0.0685606\ttotal: 10.7s\tremaining: 3m 59s\n27:\tlearn: 0.0685532\ttotal: 11.2s\tremaining: 4m\n28:\tlearn: 0.0685464\ttotal: 11.6s\tremaining: 4m\n29:\tlearn: 0.0685398\ttotal: 12s\tremaining: 4m\n30:\tlearn: 0.0685324\ttotal: 12.4s\tremaining: 3m 59s\n31:\tlearn: 0.0685250\ttotal: 12.8s\tremaining: 3m 59s\n32:\tlearn: 0.0685189\ttotal: 13.2s\tremaining: 3m 59s\n33:\tlearn: 0.0685119\ttotal: 13.7s\tremaining: 3m 59s\n34:\tlearn: 0.0685066\ttotal: 14s\tremaining: 3m 58s\n35:\tlearn: 0.0685020\ttotal: 14.5s\tremaining: 3m 58s\n36:\tlearn: 0.0684957\ttotal: 14.8s\tremaining: 3m 57s\n37:\tlearn: 0.0684897\ttotal: 15.2s\tremaining: 3m 57s\n38:\tlearn: 0.0684840\ttotal: 15.6s\tremaining: 3m 56s\n39:\tlearn: 0.0684792\ttotal: 16s\tremaining: 3m 56s\n40:\tlearn: 0.0684718\ttotal: 16.4s\tremaining: 3m 55s\n41:\tlearn: 0.0684667\ttotal: 16.8s\tremaining: 3m 55s\n42:\tlearn: 0.0684613\ttotal: 17.2s\tremaining: 3m 55s\n43:\tlearn: 0.0684564\ttotal: 17.6s\tremaining: 3m 54s\n44:\tlearn: 0.0684516\ttotal: 18s\tremaining: 3m 54s\n45:\tlearn: 0.0684474\ttotal: 18.4s\tremaining: 3m 53s\n46:\tlearn: 0.0684425\ttotal: 18.8s\tremaining: 3m 53s\n47:\tlearn: 0.0684378\ttotal: 19.2s\tremaining: 3m 52s\n48:\tlearn: 0.0684303\ttotal: 19.6s\tremaining: 3m 52s\n49:\tlearn: 0.0684253\ttotal: 20s\tremaining: 3m 52s\n50:\tlearn: 0.0684220\ttotal: 20.5s\tremaining: 3m 52s\n51:\tlearn: 0.0684173\ttotal: 20.8s\tremaining: 3m 51s\n52:\tlearn: 0.0684127\ttotal: 21.2s\tremaining: 3m 50s\n53:\tlearn: 0.0684097\ttotal: 21.6s\tremaining: 3m 50s\n54:\tlearn: 0.0684057\ttotal: 22s\tremaining: 3m 49s\n55:\tlearn: 0.0684013\ttotal: 22.4s\tremaining: 3m 49s\n56:\tlearn: 0.0683965\ttotal: 23s\tremaining: 3m 51s\n57:\tlearn: 0.0683917\ttotal: 23.5s\tremaining: 3m 51s\n58:\tlearn: 0.0683853\ttotal: 24s\tremaining: 3m 52s\n59:\tlearn: 0.0683807\ttotal: 24.4s\tremaining: 3m 51s\n60:\tlearn: 0.0683775\ttotal: 24.8s\tremaining: 3m 51s\n61:\tlearn: 0.0683740\ttotal: 25.2s\tremaining: 3m 50s\n62:\tlearn: 0.0683706\ttotal: 25.5s\tremaining: 3m 49s\n63:\tlearn: 0.0683667\ttotal: 25.9s\tremaining: 3m 49s\n64:\tlearn: 0.0683609\ttotal: 26.3s\tremaining: 3m 48s\n65:\tlearn: 0.0683581\ttotal: 26.6s\tremaining: 3m 47s\n66:\tlearn: 0.0683539\ttotal: 27s\tremaining: 3m 46s\n67:\tlearn: 0.0683515\ttotal: 27.4s\tremaining: 3m 46s\n68:\tlearn: 0.0683486\ttotal: 27.8s\tremaining: 3m 46s\n69:\tlearn: 0.0683435\ttotal: 28.2s\tremaining: 3m 45s\n70:\tlearn: 0.0683407\ttotal: 28.6s\tremaining: 3m 45s\n71:\tlearn: 0.0683371\ttotal: 29s\tremaining: 3m 44s\n72:\tlearn: 0.0683329\ttotal: 29.4s\tremaining: 3m 44s\n73:\tlearn: 0.0683291\ttotal: 29.8s\tremaining: 3m 43s\n74:\tlearn: 0.0683253\ttotal: 30.1s\tremaining: 3m 43s\n75:\tlearn: 0.0683226\ttotal: 30.5s\tremaining: 3m 42s\n76:\tlearn: 0.0683200\ttotal: 30.9s\tremaining: 3m 41s\n77:\tlearn: 0.0683174\ttotal: 31.3s\tremaining: 3m 41s\n78:\tlearn: 0.0683132\ttotal: 31.7s\tremaining: 3m 40s\n79:\tlearn: 0.0683103\ttotal: 32.1s\tremaining: 3m 40s\n80:\tlearn: 0.0683085\ttotal: 32.5s\tremaining: 3m 40s\n81:\tlearn: 0.0683056\ttotal: 32.9s\tremaining: 3m 39s\n82:\tlearn: 0.0683024\ttotal: 33.3s\tremaining: 3m 39s\n83:\tlearn: 0.0682990\ttotal: 33.7s\tremaining: 3m 38s\n84:\tlearn: 0.0682970\ttotal: 34.1s\tremaining: 3m 38s\n85:\tlearn: 0.0682944\ttotal: 34.5s\tremaining: 3m 38s\n86:\tlearn: 0.0682922\ttotal: 34.9s\tremaining: 3m 37s\n87:\tlearn: 0.0682902\ttotal: 35.2s\tremaining: 3m 37s\n88:\tlearn: 0.0682867\ttotal: 35.6s\tremaining: 3m 36s\n89:\tlearn: 0.0682846\ttotal: 36s\tremaining: 3m 36s\n90:\tlearn: 0.0682803\ttotal: 36.8s\tremaining: 3m 38s\n91:\tlearn: 0.0682778\ttotal: 37.9s\tremaining: 3m 41s\n92:\tlearn: 0.0682750\ttotal: 39s\tremaining: 3m 45s\n93:\tlearn: 0.0682724\ttotal: 39.9s\tremaining: 3m 47s\n94:\tlearn: 0.0682691\ttotal: 40.9s\tremaining: 3m 50s\n95:\tlearn: 0.0682677\ttotal: 41.9s\tremaining: 3m 53s\n96:\tlearn: 0.0682652\ttotal: 43s\tremaining: 3m 56s\n97:\tlearn: 0.0682628\ttotal: 44.2s\tremaining: 4m\n98:\tlearn: 0.0682612\ttotal: 45.2s\tremaining: 4m 2s\n99:\tlearn: 0.0682583\ttotal: 46.3s\tremaining: 4m 5s\n100:\tlearn: 0.0682550\ttotal: 46.9s\tremaining: 4m 5s\n101:\tlearn: 0.0682536\ttotal: 47.4s\tremaining: 4m 5s\n102:\tlearn: 0.0682515\ttotal: 47.8s\tremaining: 4m 4s\n103:\tlearn: 0.0682483\ttotal: 48.2s\tremaining: 4m 4s\n104:\tlearn: 0.0682447\ttotal: 48.8s\tremaining: 4m 3s\n105:\tlearn: 0.0682431\ttotal: 49.1s\tremaining: 4m 2s\n106:\tlearn: 0.0682414\ttotal: 49.5s\tremaining: 4m 2s\n107:\tlearn: 0.0682381\ttotal: 50s\tremaining: 4m 1s\n108:\tlearn: 0.0682359\ttotal: 50.8s\tremaining: 4m 2s\n109:\tlearn: 0.0682320\ttotal: 51.6s\tremaining: 4m 3s\n110:\tlearn: 0.0682301\ttotal: 52.5s\tremaining: 4m 5s\n111:\tlearn: 0.0682280\ttotal: 53.2s\tremaining: 4m 6s\n112:\tlearn: 0.0682264\ttotal: 53.7s\tremaining: 4m 5s\n113:\tlearn: 0.0682247\ttotal: 54.7s\tremaining: 4m 7s\n114:\tlearn: 0.0682225\ttotal: 55.8s\tremaining: 4m 9s\n115:\tlearn: 0.0682208\ttotal: 57.2s\tremaining: 4m 13s\n116:\tlearn: 0.0682189\ttotal: 58s\tremaining: 4m 14s\n117:\tlearn: 0.0682164\ttotal: 58.5s\tremaining: 4m 13s\n118:\tlearn: 0.0682138\ttotal: 59s\tremaining: 4m 13s\n119:\tlearn: 0.0682123\ttotal: 59.5s\tremaining: 4m 12s\n120:\tlearn: 0.0682113\ttotal: 59.8s\tremaining: 4m 11s\n121:\tlearn: 0.0682078\ttotal: 1m\tremaining: 4m 10s\n122:\tlearn: 0.0682059\ttotal: 1m\tremaining: 4m 10s\n123:\tlearn: 0.0682043\ttotal: 1m 1s\tremaining: 4m 9s\n124:\tlearn: 0.0682020\ttotal: 1m 1s\tremaining: 4m 8s\n125:\tlearn: 0.0682006\ttotal: 1m 1s\tremaining: 4m 7s\n126:\tlearn: 0.0681992\ttotal: 1m 2s\tremaining: 4m 6s\n127:\tlearn: 0.0681969\ttotal: 1m 2s\tremaining: 4m 5s\n128:\tlearn: 0.0681946\ttotal: 1m 3s\tremaining: 4m 5s\n129:\tlearn: 0.0681913\ttotal: 1m 3s\tremaining: 4m 4s\n130:\tlearn: 0.0681897\ttotal: 1m 3s\tremaining: 4m 3s\n131:\tlearn: 0.0681876\ttotal: 1m 4s\tremaining: 4m 2s\n132:\tlearn: 0.0681849\ttotal: 1m 4s\tremaining: 4m 1s\n133:\tlearn: 0.0681821\ttotal: 1m 5s\tremaining: 4m\n134:\tlearn: 0.0681806\ttotal: 1m 5s\tremaining: 4m\n135:\tlearn: 0.0681778\ttotal: 1m 5s\tremaining: 3m 59s\n136:\tlearn: 0.0681763\ttotal: 1m 6s\tremaining: 3m 58s\n137:\tlearn: 0.0681746\ttotal: 1m 6s\tremaining: 3m 57s\n138:\tlearn: 0.0681723\ttotal: 1m 7s\tremaining: 3m 56s\n139:\tlearn: 0.0681707\ttotal: 1m 7s\tremaining: 3m 56s\n140:\tlearn: 0.0681676\ttotal: 1m 7s\tremaining: 3m 55s\n141:\tlearn: 0.0681666\ttotal: 1m 8s\tremaining: 3m 54s\n142:\tlearn: 0.0681641\ttotal: 1m 8s\tremaining: 3m 54s\n143:\tlearn: 0.0681613\ttotal: 1m 9s\tremaining: 3m 53s\n144:\tlearn: 0.0681594\ttotal: 1m 9s\tremaining: 3m 52s\n145:\tlearn: 0.0681585\ttotal: 1m 9s\tremaining: 3m 51s\n146:\tlearn: 0.0681569\ttotal: 1m 10s\tremaining: 3m 51s\n147:\tlearn: 0.0681553\ttotal: 1m 10s\tremaining: 3m 50s\n148:\tlearn: 0.0681541\ttotal: 1m 11s\tremaining: 3m 49s\n149:\tlearn: 0.0681526\ttotal: 1m 11s\tremaining: 3m 49s\n150:\tlearn: 0.0681511\ttotal: 1m 12s\tremaining: 3m 48s\n151:\tlearn: 0.0681493\ttotal: 1m 12s\tremaining: 3m 47s\n152:\tlearn: 0.0681475\ttotal: 1m 12s\tremaining: 3m 46s\n153:\tlearn: 0.0681465\ttotal: 1m 13s\tremaining: 3m 46s\n154:\tlearn: 0.0681441\ttotal: 1m 13s\tremaining: 3m 45s\n155:\tlearn: 0.0681429\ttotal: 1m 13s\tremaining: 3m 44s\n156:\tlearn: 0.0681412\ttotal: 1m 14s\tremaining: 3m 44s\n157:\tlearn: 0.0681403\ttotal: 1m 14s\tremaining: 3m 43s\n158:\tlearn: 0.0681397\ttotal: 1m 15s\tremaining: 3m 42s\n159:\tlearn: 0.0681385\ttotal: 1m 15s\tremaining: 3m 41s\n160:\tlearn: 0.0681371\ttotal: 1m 15s\tremaining: 3m 41s\n161:\tlearn: 0.0681359\ttotal: 1m 16s\tremaining: 3m 40s\n162:\tlearn: 0.0681341\ttotal: 1m 16s\tremaining: 3m 39s\n163:\tlearn: 0.0681332\ttotal: 1m 17s\tremaining: 3m 38s\n164:\tlearn: 0.0681308\ttotal: 1m 17s\tremaining: 3m 38s\n165:\tlearn: 0.0681294\ttotal: 1m 17s\tremaining: 3m 37s\n166:\tlearn: 0.0681275\ttotal: 1m 18s\tremaining: 3m 37s\n167:\tlearn: 0.0681266\ttotal: 1m 18s\tremaining: 3m 36s\n168:\tlearn: 0.0681248\ttotal: 1m 19s\tremaining: 3m 35s\n169:\tlearn: 0.0681235\ttotal: 1m 19s\tremaining: 3m 35s\n170:\tlearn: 0.0681218\ttotal: 1m 19s\tremaining: 3m 34s\n171:\tlearn: 0.0681197\ttotal: 1m 20s\tremaining: 3m 33s\n172:\tlearn: 0.0681187\ttotal: 1m 20s\tremaining: 3m 33s\n173:\tlearn: 0.0681180\ttotal: 1m 21s\tremaining: 3m 32s\n174:\tlearn: 0.0681173\ttotal: 1m 21s\tremaining: 3m 31s\n175:\tlearn: 0.0681161\ttotal: 1m 21s\tremaining: 3m 31s\n176:\tlearn: 0.0681154\ttotal: 1m 22s\tremaining: 3m 30s\n177:\tlearn: 0.0681142\ttotal: 1m 22s\tremaining: 3m 29s\n178:\tlearn: 0.0681119\ttotal: 1m 22s\tremaining: 3m 29s\n179:\tlearn: 0.0681103\ttotal: 1m 23s\tremaining: 3m 28s\n180:\tlearn: 0.0681087\ttotal: 1m 23s\tremaining: 3m 27s\n181:\tlearn: 0.0681083\ttotal: 1m 24s\tremaining: 3m 27s\n182:\tlearn: 0.0681070\ttotal: 1m 24s\tremaining: 3m 26s\n183:\tlearn: 0.0681055\ttotal: 1m 24s\tremaining: 3m 25s\n184:\tlearn: 0.0681039\ttotal: 1m 25s\tremaining: 3m 25s\n185:\tlearn: 0.0681026\ttotal: 1m 25s\tremaining: 3m 24s\n186:\tlearn: 0.0681005\ttotal: 1m 26s\tremaining: 3m 24s\n187:\tlearn: 0.0680991\ttotal: 1m 26s\tremaining: 3m 23s\n188:\tlearn: 0.0680985\ttotal: 1m 26s\tremaining: 3m 22s\n189:\tlearn: 0.0680955\ttotal: 1m 27s\tremaining: 3m 21s\n190:\tlearn: 0.0680948\ttotal: 1m 27s\tremaining: 3m 21s\n191:\tlearn: 0.0680937\ttotal: 1m 28s\tremaining: 3m 20s\n192:\tlearn: 0.0680929\ttotal: 1m 28s\tremaining: 3m 20s\n193:\tlearn: 0.0680923\ttotal: 1m 28s\tremaining: 3m 19s\n194:\tlearn: 0.0680914\ttotal: 1m 29s\tremaining: 3m 19s\n195:\tlearn: 0.0680901\ttotal: 1m 30s\tremaining: 3m 19s\n196:\tlearn: 0.0680889\ttotal: 1m 30s\tremaining: 3m 18s\n197:\tlearn: 0.0680869\ttotal: 1m 30s\tremaining: 3m 18s\n198:\tlearn: 0.0680861\ttotal: 1m 31s\tremaining: 3m 17s\n199:\tlearn: 0.0680840\ttotal: 1m 31s\tremaining: 3m 17s\n200:\tlearn: 0.0680831\ttotal: 1m 32s\tremaining: 3m 16s\n201:\tlearn: 0.0680818\ttotal: 1m 32s\tremaining: 3m 15s\n202:\tlearn: 0.0680815\ttotal: 1m 32s\tremaining: 3m 14s\n203:\tlearn: 0.0680804\ttotal: 1m 32s\tremaining: 3m 14s\n204:\tlearn: 0.0680778\ttotal: 1m 33s\tremaining: 3m 13s\n205:\tlearn: 0.0680753\ttotal: 1m 33s\tremaining: 3m 12s\n206:\tlearn: 0.0680741\ttotal: 1m 34s\tremaining: 3m 12s\n207:\tlearn: 0.0680734\ttotal: 1m 34s\tremaining: 3m 11s\n208:\tlearn: 0.0680723\ttotal: 1m 34s\tremaining: 3m 11s\n209:\tlearn: 0.0680709\ttotal: 1m 35s\tremaining: 3m 10s\n210:\tlearn: 0.0680699\ttotal: 1m 35s\tremaining: 3m 9s\n211:\tlearn: 0.0680691\ttotal: 1m 36s\tremaining: 3m 9s\n212:\tlearn: 0.0680680\ttotal: 1m 36s\tremaining: 3m 8s\n213:\tlearn: 0.0680668\ttotal: 1m 36s\tremaining: 3m 8s\n214:\tlearn: 0.0680658\ttotal: 1m 37s\tremaining: 3m 7s\n215:\tlearn: 0.0680650\ttotal: 1m 37s\tremaining: 3m 7s\n216:\tlearn: 0.0680631\ttotal: 1m 38s\tremaining: 3m 7s\n217:\tlearn: 0.0680608\ttotal: 1m 38s\tremaining: 3m 6s\n218:\tlearn: 0.0680583\ttotal: 1m 39s\tremaining: 3m 5s\n219:\tlearn: 0.0680576\ttotal: 1m 39s\tremaining: 3m 5s\n220:\tlearn: 0.0680556\ttotal: 1m 39s\tremaining: 3m 4s\n221:\tlearn: 0.0680541\ttotal: 1m 40s\tremaining: 3m 4s\n222:\tlearn: 0.0680531\ttotal: 1m 40s\tremaining: 3m 3s\n223:\tlearn: 0.0680522\ttotal: 1m 41s\tremaining: 3m 3s\n224:\tlearn: 0.0680508\ttotal: 1m 41s\tremaining: 3m 2s\n225:\tlearn: 0.0680500\ttotal: 1m 41s\tremaining: 3m 2s\n226:\tlearn: 0.0680493\ttotal: 1m 42s\tremaining: 3m 1s\n227:\tlearn: 0.0680483\ttotal: 1m 42s\tremaining: 3m 1s\n228:\tlearn: 0.0680471\ttotal: 1m 43s\tremaining: 3m\n229:\tlearn: 0.0680464\ttotal: 1m 43s\tremaining: 3m\n230:\tlearn: 0.0680447\ttotal: 1m 43s\tremaining: 2m 59s\n231:\tlearn: 0.0680440\ttotal: 1m 44s\tremaining: 2m 58s\n232:\tlearn: 0.0680429\ttotal: 1m 44s\tremaining: 2m 58s\n233:\tlearn: 0.0680426\ttotal: 1m 45s\tremaining: 2m 57s\n234:\tlearn: 0.0680414\ttotal: 1m 45s\tremaining: 2m 57s\n235:\tlearn: 0.0680390\ttotal: 1m 45s\tremaining: 2m 56s\n236:\tlearn: 0.0680382\ttotal: 1m 46s\tremaining: 2m 56s\n237:\tlearn: 0.0680360\ttotal: 1m 46s\tremaining: 2m 55s\n238:\tlearn: 0.0680356\ttotal: 1m 47s\tremaining: 2m 55s\n239:\tlearn: 0.0680343\ttotal: 1m 47s\tremaining: 2m 54s\n240:\tlearn: 0.0680329\ttotal: 1m 47s\tremaining: 2m 53s\n241:\tlearn: 0.0680317\ttotal: 1m 48s\tremaining: 2m 53s\n242:\tlearn: 0.0680304\ttotal: 1m 48s\tremaining: 2m 52s\n243:\tlearn: 0.0680291\ttotal: 1m 48s\tremaining: 2m 52s\n244:\tlearn: 0.0680283\ttotal: 1m 49s\tremaining: 2m 51s\n245:\tlearn: 0.0680278\ttotal: 1m 49s\tremaining: 2m 51s\n246:\tlearn: 0.0680264\ttotal: 1m 50s\tremaining: 2m 50s\n247:\tlearn: 0.0680250\ttotal: 1m 50s\tremaining: 2m 50s\n248:\tlearn: 0.0680246\ttotal: 1m 51s\tremaining: 2m 49s\n249:\tlearn: 0.0680240\ttotal: 1m 51s\tremaining: 2m 49s\n250:\tlearn: 0.0680228\ttotal: 1m 51s\tremaining: 2m 48s\n251:\tlearn: 0.0680216\ttotal: 1m 52s\tremaining: 2m 48s\n252:\tlearn: 0.0680199\ttotal: 1m 52s\tremaining: 2m 47s\n253:\tlearn: 0.0680198\ttotal: 1m 52s\tremaining: 2m 46s\n254:\tlearn: 0.0680182\ttotal: 1m 53s\tremaining: 2m 46s\n255:\tlearn: 0.0680174\ttotal: 1m 53s\tremaining: 2m 45s\n256:\tlearn: 0.0680160\ttotal: 1m 53s\tremaining: 2m 45s\n257:\tlearn: 0.0680153\ttotal: 1m 54s\tremaining: 2m 44s\n258:\tlearn: 0.0680143\ttotal: 1m 54s\tremaining: 2m 44s\n259:\tlearn: 0.0680124\ttotal: 1m 55s\tremaining: 2m 43s\n260:\tlearn: 0.0680115\ttotal: 1m 55s\tremaining: 2m 43s\n261:\tlearn: 0.0680097\ttotal: 1m 55s\tremaining: 2m 42s\n262:\tlearn: 0.0680085\ttotal: 1m 56s\tremaining: 2m 42s\n263:\tlearn: 0.0680075\ttotal: 1m 56s\tremaining: 2m 42s\n264:\tlearn: 0.0680056\ttotal: 1m 57s\tremaining: 2m 41s\n265:\tlearn: 0.0680045\ttotal: 1m 57s\tremaining: 2m 41s\n266:\tlearn: 0.0680038\ttotal: 1m 58s\tremaining: 2m 40s\n267:\tlearn: 0.0680031\ttotal: 1m 58s\tremaining: 2m 40s\n268:\tlearn: 0.0680019\ttotal: 1m 58s\tremaining: 2m 39s\n269:\tlearn: 0.0680005\ttotal: 1m 59s\tremaining: 2m 39s\n270:\tlearn: 0.0679998\ttotal: 1m 59s\tremaining: 2m 38s\n271:\tlearn: 0.0679989\ttotal: 2m\tremaining: 2m 38s\n272:\tlearn: 0.0679981\ttotal: 2m\tremaining: 2m 37s\n273:\tlearn: 0.0679972\ttotal: 2m\tremaining: 2m 37s\n274:\tlearn: 0.0679969\ttotal: 2m 1s\tremaining: 2m 36s\n275:\tlearn: 0.0679961\ttotal: 2m 1s\tremaining: 2m 36s\n276:\tlearn: 0.0679949\ttotal: 2m 2s\tremaining: 2m 36s\n277:\tlearn: 0.0679944\ttotal: 2m 2s\tremaining: 2m 35s\n278:\tlearn: 0.0679935\ttotal: 2m 3s\tremaining: 2m 34s\n279:\tlearn: 0.0679922\ttotal: 2m 3s\tremaining: 2m 34s\n280:\tlearn: 0.0679912\ttotal: 2m 3s\tremaining: 2m 33s\n281:\tlearn: 0.0679901\ttotal: 2m 4s\tremaining: 2m 33s\n282:\tlearn: 0.0679897\ttotal: 2m 4s\tremaining: 2m 32s\n283:\tlearn: 0.0679892\ttotal: 2m 5s\tremaining: 2m 32s\n284:\tlearn: 0.0679880\ttotal: 2m 5s\tremaining: 2m 31s\n285:\tlearn: 0.0679859\ttotal: 2m 5s\tremaining: 2m 31s\n286:\tlearn: 0.0679854\ttotal: 2m 6s\tremaining: 2m 30s\n287:\tlearn: 0.0679845\ttotal: 2m 6s\tremaining: 2m 30s\n288:\tlearn: 0.0679826\ttotal: 2m 7s\tremaining: 2m 29s\n289:\tlearn: 0.0679821\ttotal: 2m 7s\tremaining: 2m 29s\n290:\tlearn: 0.0679814\ttotal: 2m 7s\tremaining: 2m 29s\n291:\tlearn: 0.0679799\ttotal: 2m 8s\tremaining: 2m 28s\n292:\tlearn: 0.0679785\ttotal: 2m 8s\tremaining: 2m 28s\n293:\tlearn: 0.0679780\ttotal: 2m 9s\tremaining: 2m 27s\n294:\tlearn: 0.0679772\ttotal: 2m 9s\tremaining: 2m 27s\n295:\tlearn: 0.0679770\ttotal: 2m 9s\tremaining: 2m 26s\n296:\tlearn: 0.0679765\ttotal: 2m 10s\tremaining: 2m 25s\n297:\tlearn: 0.0679760\ttotal: 2m 10s\tremaining: 2m 25s\n298:\tlearn: 0.0679751\ttotal: 2m 10s\tremaining: 2m 24s\n299:\tlearn: 0.0679746\ttotal: 2m 11s\tremaining: 2m 24s\n300:\tlearn: 0.0679737\ttotal: 2m 11s\tremaining: 2m 23s\n301:\tlearn: 0.0679725\ttotal: 2m 12s\tremaining: 2m 23s\n302:\tlearn: 0.0679717\ttotal: 2m 12s\tremaining: 2m 23s\n303:\tlearn: 0.0679702\ttotal: 2m 12s\tremaining: 2m 22s\n304:\tlearn: 0.0679695\ttotal: 2m 13s\tremaining: 2m 22s\n305:\tlearn: 0.0679687\ttotal: 2m 13s\tremaining: 2m 21s\n306:\tlearn: 0.0679672\ttotal: 2m 14s\tremaining: 2m 21s\n307:\tlearn: 0.0679667\ttotal: 2m 14s\tremaining: 2m 20s\n308:\tlearn: 0.0679660\ttotal: 2m 14s\tremaining: 2m 20s\n309:\tlearn: 0.0679648\ttotal: 2m 15s\tremaining: 2m 19s\n310:\tlearn: 0.0679631\ttotal: 2m 15s\tremaining: 2m 19s\n311:\tlearn: 0.0679618\ttotal: 2m 15s\tremaining: 2m 18s\n312:\tlearn: 0.0679615\ttotal: 2m 16s\tremaining: 2m 18s\n313:\tlearn: 0.0679607\ttotal: 2m 16s\tremaining: 2m 17s\n314:\tlearn: 0.0679596\ttotal: 2m 17s\tremaining: 2m 17s\n315:\tlearn: 0.0679586\ttotal: 2m 17s\tremaining: 2m 16s\n316:\tlearn: 0.0679579\ttotal: 2m 17s\tremaining: 2m 16s\n317:\tlearn: 0.0679561\ttotal: 2m 18s\tremaining: 2m 15s\n318:\tlearn: 0.0679554\ttotal: 2m 18s\tremaining: 2m 15s\n319:\tlearn: 0.0679543\ttotal: 2m 19s\tremaining: 2m 14s\n320:\tlearn: 0.0679530\ttotal: 2m 19s\tremaining: 2m 14s\n321:\tlearn: 0.0679517\ttotal: 2m 19s\tremaining: 2m 13s\n322:\tlearn: 0.0679506\ttotal: 2m 20s\tremaining: 2m 13s\n323:\tlearn: 0.0679502\ttotal: 2m 20s\tremaining: 2m 12s\n324:\tlearn: 0.0679492\ttotal: 2m 20s\tremaining: 2m 12s\n325:\tlearn: 0.0679489\ttotal: 2m 21s\tremaining: 2m 11s\n326:\tlearn: 0.0679483\ttotal: 2m 21s\tremaining: 2m 11s\n327:\tlearn: 0.0679480\ttotal: 2m 22s\tremaining: 2m 10s\n328:\tlearn: 0.0679474\ttotal: 2m 22s\tremaining: 2m 10s\n329:\tlearn: 0.0679467\ttotal: 2m 22s\tremaining: 2m 9s\n330:\tlearn: 0.0679457\ttotal: 2m 23s\tremaining: 2m 9s\n331:\tlearn: 0.0679448\ttotal: 2m 23s\tremaining: 2m 8s\n332:\tlearn: 0.0679434\ttotal: 2m 23s\tremaining: 2m 8s\n333:\tlearn: 0.0679424\ttotal: 2m 24s\tremaining: 2m 7s\n334:\tlearn: 0.0679414\ttotal: 2m 24s\tremaining: 2m 7s\n335:\tlearn: 0.0679406\ttotal: 2m 25s\tremaining: 2m 6s\n336:\tlearn: 0.0679397\ttotal: 2m 25s\tremaining: 2m 6s\n337:\tlearn: 0.0679389\ttotal: 2m 25s\tremaining: 2m 6s\n338:\tlearn: 0.0679382\ttotal: 2m 26s\tremaining: 2m 5s\n339:\tlearn: 0.0679376\ttotal: 2m 26s\tremaining: 2m 5s\n340:\tlearn: 0.0679360\ttotal: 2m 27s\tremaining: 2m 4s\n341:\tlearn: 0.0679356\ttotal: 2m 27s\tremaining: 2m 4s\n342:\tlearn: 0.0679347\ttotal: 2m 27s\tremaining: 2m 3s\n343:\tlearn: 0.0679337\ttotal: 2m 28s\tremaining: 2m 3s\n344:\tlearn: 0.0679326\ttotal: 2m 28s\tremaining: 2m 2s\n345:\tlearn: 0.0679319\ttotal: 2m 29s\tremaining: 2m 2s\n346:\tlearn: 0.0679304\ttotal: 2m 29s\tremaining: 2m 1s\n347:\tlearn: 0.0679294\ttotal: 2m 29s\tremaining: 2m 1s\n348:\tlearn: 0.0679285\ttotal: 2m 30s\tremaining: 2m 1s\n349:\tlearn: 0.0679282\ttotal: 2m 30s\tremaining: 2m\n350:\tlearn: 0.0679272\ttotal: 2m 31s\tremaining: 2m\n351:\tlearn: 0.0679272\ttotal: 2m 31s\tremaining: 1m 59s\n352:\tlearn: 0.0679257\ttotal: 2m 31s\tremaining: 1m 58s\n353:\tlearn: 0.0679239\ttotal: 2m 32s\tremaining: 1m 58s\n354:\tlearn: 0.0679232\ttotal: 2m 32s\tremaining: 1m 58s\n355:\tlearn: 0.0679226\ttotal: 2m 32s\tremaining: 1m 57s\n356:\tlearn: 0.0679220\ttotal: 2m 33s\tremaining: 1m 57s\n357:\tlearn: 0.0679210\ttotal: 2m 33s\tremaining: 1m 56s\n358:\tlearn: 0.0679195\ttotal: 2m 34s\tremaining: 1m 56s\n359:\tlearn: 0.0679186\ttotal: 2m 34s\tremaining: 1m 56s\n360:\tlearn: 0.0679174\ttotal: 2m 35s\tremaining: 1m 55s\n361:\tlearn: 0.0679159\ttotal: 2m 35s\tremaining: 1m 55s\n362:\tlearn: 0.0679157\ttotal: 2m 35s\tremaining: 1m 54s\n363:\tlearn: 0.0679149\ttotal: 2m 36s\tremaining: 1m 54s\n364:\tlearn: 0.0679146\ttotal: 2m 36s\tremaining: 1m 53s\n365:\tlearn: 0.0679138\ttotal: 2m 37s\tremaining: 1m 53s\n366:\tlearn: 0.0679123\ttotal: 2m 37s\tremaining: 1m 52s\n367:\tlearn: 0.0679110\ttotal: 2m 37s\tremaining: 1m 52s\n368:\tlearn: 0.0679098\ttotal: 2m 38s\tremaining: 1m 51s\n369:\tlearn: 0.0679085\ttotal: 2m 38s\tremaining: 1m 51s\n370:\tlearn: 0.0679073\ttotal: 2m 39s\tremaining: 1m 51s\n371:\tlearn: 0.0679070\ttotal: 2m 39s\tremaining: 1m 50s\n372:\tlearn: 0.0679059\ttotal: 2m 39s\tremaining: 1m 50s\n373:\tlearn: 0.0679044\ttotal: 2m 40s\tremaining: 1m 49s\n374:\tlearn: 0.0679038\ttotal: 2m 40s\tremaining: 1m 49s\n375:\tlearn: 0.0679025\ttotal: 2m 40s\tremaining: 1m 48s\n376:\tlearn: 0.0679012\ttotal: 2m 41s\tremaining: 1m 48s\n377:\tlearn: 0.0678999\ttotal: 2m 41s\tremaining: 1m 47s\n378:\tlearn: 0.0678992\ttotal: 2m 42s\tremaining: 1m 47s\n379:\tlearn: 0.0678969\ttotal: 2m 42s\tremaining: 1m 46s\n380:\tlearn: 0.0678965\ttotal: 2m 42s\tremaining: 1m 46s\n381:\tlearn: 0.0678957\ttotal: 2m 43s\tremaining: 1m 45s\n382:\tlearn: 0.0678946\ttotal: 2m 43s\tremaining: 1m 45s\n383:\tlearn: 0.0678933\ttotal: 2m 43s\tremaining: 1m 45s\n384:\tlearn: 0.0678925\ttotal: 2m 44s\tremaining: 1m 44s\n385:\tlearn: 0.0678923\ttotal: 2m 44s\tremaining: 1m 44s\n386:\tlearn: 0.0678913\ttotal: 2m 45s\tremaining: 1m 43s\n387:\tlearn: 0.0678903\ttotal: 2m 45s\tremaining: 1m 43s\n388:\tlearn: 0.0678891\ttotal: 2m 45s\tremaining: 1m 42s\n389:\tlearn: 0.0678881\ttotal: 2m 46s\tremaining: 1m 42s\n390:\tlearn: 0.0678868\ttotal: 2m 46s\tremaining: 1m 41s\n391:\tlearn: 0.0678859\ttotal: 2m 47s\tremaining: 1m 41s\n392:\tlearn: 0.0678850\ttotal: 2m 47s\tremaining: 1m 41s\n393:\tlearn: 0.0678836\ttotal: 2m 47s\tremaining: 1m 40s\n394:\tlearn: 0.0678830\ttotal: 2m 48s\tremaining: 1m 40s\n395:\tlearn: 0.0678823\ttotal: 2m 48s\tremaining: 1m 39s\n396:\tlearn: 0.0678816\ttotal: 2m 49s\tremaining: 1m 39s\n397:\tlearn: 0.0678807\ttotal: 2m 49s\tremaining: 1m 38s\n398:\tlearn: 0.0678792\ttotal: 2m 49s\tremaining: 1m 38s\n399:\tlearn: 0.0678785\ttotal: 2m 50s\tremaining: 1m 37s\n400:\tlearn: 0.0678768\ttotal: 2m 50s\tremaining: 1m 37s\n401:\tlearn: 0.0678754\ttotal: 2m 50s\tremaining: 1m 36s\n402:\tlearn: 0.0678749\ttotal: 2m 51s\tremaining: 1m 36s\n403:\tlearn: 0.0678739\ttotal: 2m 51s\tremaining: 1m 36s\n404:\tlearn: 0.0678733\ttotal: 2m 52s\tremaining: 1m 35s\n405:\tlearn: 0.0678713\ttotal: 2m 52s\tremaining: 1m 35s\n406:\tlearn: 0.0678705\ttotal: 2m 52s\tremaining: 1m 34s\n407:\tlearn: 0.0678687\ttotal: 2m 53s\tremaining: 1m 34s\n408:\tlearn: 0.0678679\ttotal: 2m 53s\tremaining: 1m 33s\n409:\tlearn: 0.0678671\ttotal: 2m 54s\tremaining: 1m 33s\n410:\tlearn: 0.0678637\ttotal: 2m 54s\tremaining: 1m 32s\n411:\tlearn: 0.0678632\ttotal: 2m 54s\tremaining: 1m 32s\n412:\tlearn: 0.0678622\ttotal: 2m 55s\tremaining: 1m 31s\n413:\tlearn: 0.0678615\ttotal: 2m 55s\tremaining: 1m 31s\n414:\tlearn: 0.0678606\ttotal: 2m 55s\tremaining: 1m 31s\n415:\tlearn: 0.0678589\ttotal: 2m 56s\tremaining: 1m 30s\n416:\tlearn: 0.0678579\ttotal: 2m 56s\tremaining: 1m 30s\n417:\tlearn: 0.0678572\ttotal: 2m 57s\tremaining: 1m 29s\n418:\tlearn: 0.0678565\ttotal: 2m 57s\tremaining: 1m 29s\n419:\tlearn: 0.0678547\ttotal: 2m 57s\tremaining: 1m 28s\n420:\tlearn: 0.0678539\ttotal: 2m 58s\tremaining: 1m 28s\n421:\tlearn: 0.0678520\ttotal: 2m 58s\tremaining: 1m 28s\n422:\tlearn: 0.0678513\ttotal: 2m 59s\tremaining: 1m 27s\n423:\tlearn: 0.0678495\ttotal: 2m 59s\tremaining: 1m 27s\n424:\tlearn: 0.0678483\ttotal: 2m 59s\tremaining: 1m 26s\n425:\tlearn: 0.0678467\ttotal: 3m\tremaining: 1m 26s\n426:\tlearn: 0.0678445\ttotal: 3m\tremaining: 1m 25s\n427:\tlearn: 0.0678427\ttotal: 3m\tremaining: 1m 25s\n428:\tlearn: 0.0678405\ttotal: 3m 1s\tremaining: 1m 24s\n429:\tlearn: 0.0678397\ttotal: 3m 1s\tremaining: 1m 24s\n430:\tlearn: 0.0678386\ttotal: 3m 2s\tremaining: 1m 24s\n431:\tlearn: 0.0678367\ttotal: 3m 2s\tremaining: 1m 23s\n432:\tlearn: 0.0678350\ttotal: 3m 2s\tremaining: 1m 23s\n433:\tlearn: 0.0678335\ttotal: 3m 3s\tremaining: 1m 22s\n434:\tlearn: 0.0678324\ttotal: 3m 3s\tremaining: 1m 22s\n435:\tlearn: 0.0678315\ttotal: 3m 4s\tremaining: 1m 21s\n436:\tlearn: 0.0678303\ttotal: 3m 4s\tremaining: 1m 21s\n437:\tlearn: 0.0678285\ttotal: 3m 4s\tremaining: 1m 21s\n438:\tlearn: 0.0678261\ttotal: 3m 5s\tremaining: 1m 20s\n439:\tlearn: 0.0678255\ttotal: 3m 5s\tremaining: 1m 20s\n440:\tlearn: 0.0678249\ttotal: 3m 6s\tremaining: 1m 19s\n441:\tlearn: 0.0678238\ttotal: 3m 6s\tremaining: 1m 19s\n442:\tlearn: 0.0678218\ttotal: 3m 7s\tremaining: 1m 19s\n443:\tlearn: 0.0678196\ttotal: 3m 7s\tremaining: 1m 18s\n444:\tlearn: 0.0678178\ttotal: 3m 8s\tremaining: 1m 18s\n445:\tlearn: 0.0678158\ttotal: 3m 8s\tremaining: 1m 17s\n446:\tlearn: 0.0678150\ttotal: 3m 8s\tremaining: 1m 17s\n447:\tlearn: 0.0678136\ttotal: 3m 9s\tremaining: 1m 16s\n448:\tlearn: 0.0678121\ttotal: 3m 9s\tremaining: 1m 16s\n449:\tlearn: 0.0678107\ttotal: 3m 10s\tremaining: 1m 16s\n450:\tlearn: 0.0678091\ttotal: 3m 10s\tremaining: 1m 15s\n451:\tlearn: 0.0678083\ttotal: 3m 10s\tremaining: 1m 15s\n452:\tlearn: 0.0678062\ttotal: 3m 11s\tremaining: 1m 14s\n453:\tlearn: 0.0678044\ttotal: 3m 11s\tremaining: 1m 14s\n454:\tlearn: 0.0678042\ttotal: 3m 12s\tremaining: 1m 13s\n455:\tlearn: 0.0678028\ttotal: 3m 12s\tremaining: 1m 13s\n456:\tlearn: 0.0678013\ttotal: 3m 12s\tremaining: 1m 12s\n457:\tlearn: 0.0678006\ttotal: 3m 13s\tremaining: 1m 12s\n458:\tlearn: 0.0677976\ttotal: 3m 13s\tremaining: 1m 12s\n459:\tlearn: 0.0677963\ttotal: 3m 13s\tremaining: 1m 11s\n460:\tlearn: 0.0677950\ttotal: 3m 14s\tremaining: 1m 11s\n461:\tlearn: 0.0677937\ttotal: 3m 14s\tremaining: 1m 10s\n462:\tlearn: 0.0677931\ttotal: 3m 15s\tremaining: 1m 10s\n463:\tlearn: 0.0677903\ttotal: 3m 15s\tremaining: 1m 9s\n464:\tlearn: 0.0677894\ttotal: 3m 15s\tremaining: 1m 9s\n465:\tlearn: 0.0677871\ttotal: 3m 16s\tremaining: 1m 9s\n466:\tlearn: 0.0677864\ttotal: 3m 16s\tremaining: 1m 8s\n467:\tlearn: 0.0677858\ttotal: 3m 17s\tremaining: 1m 8s\n468:\tlearn: 0.0677838\ttotal: 3m 17s\tremaining: 1m 7s\n469:\tlearn: 0.0677826\ttotal: 3m 17s\tremaining: 1m 7s\n470:\tlearn: 0.0677804\ttotal: 3m 18s\tremaining: 1m 6s\n471:\tlearn: 0.0677791\ttotal: 3m 18s\tremaining: 1m 6s\n472:\tlearn: 0.0677775\ttotal: 3m 19s\tremaining: 1m 6s\n473:\tlearn: 0.0677756\ttotal: 3m 19s\tremaining: 1m 5s\n474:\tlearn: 0.0677739\ttotal: 3m 19s\tremaining: 1m 5s\n475:\tlearn: 0.0677734\ttotal: 3m 20s\tremaining: 1m 4s\n476:\tlearn: 0.0677724\ttotal: 3m 20s\tremaining: 1m 4s\n477:\tlearn: 0.0677709\ttotal: 3m 21s\tremaining: 1m 3s\n478:\tlearn: 0.0677694\ttotal: 3m 21s\tremaining: 1m 3s\n479:\tlearn: 0.0677662\ttotal: 3m 21s\tremaining: 1m 3s\n480:\tlearn: 0.0677654\ttotal: 3m 22s\tremaining: 1m 2s\n481:\tlearn: 0.0677640\ttotal: 3m 22s\tremaining: 1m 2s\n482:\tlearn: 0.0677624\ttotal: 3m 22s\tremaining: 1m 1s\n483:\tlearn: 0.0677614\ttotal: 3m 23s\tremaining: 1m 1s\n484:\tlearn: 0.0677590\ttotal: 3m 23s\tremaining: 1m\n485:\tlearn: 0.0677572\ttotal: 3m 24s\tremaining: 1m\n486:\tlearn: 0.0677554\ttotal: 3m 24s\tremaining: 1m\n487:\tlearn: 0.0677534\ttotal: 3m 24s\tremaining: 59.6s\n488:\tlearn: 0.0677529\ttotal: 3m 25s\tremaining: 59.2s\n489:\tlearn: 0.0677506\ttotal: 3m 25s\tremaining: 58.8s\n490:\tlearn: 0.0677496\ttotal: 3m 25s\tremaining: 58.3s\n491:\tlearn: 0.0677476\ttotal: 3m 26s\tremaining: 57.9s\n492:\tlearn: 0.0677468\ttotal: 3m 26s\tremaining: 57.5s\n493:\tlearn: 0.0677463\ttotal: 3m 27s\tremaining: 57s\n494:\tlearn: 0.0677450\ttotal: 3m 27s\tremaining: 56.6s\n495:\tlearn: 0.0677434\ttotal: 3m 27s\tremaining: 56.2s\n496:\tlearn: 0.0677425\ttotal: 3m 28s\tremaining: 55.7s\n497:\tlearn: 0.0677409\ttotal: 3m 28s\tremaining: 55.3s\n498:\tlearn: 0.0677399\ttotal: 3m 29s\tremaining: 55s\n499:\tlearn: 0.0677389\ttotal: 3m 29s\tremaining: 54.6s\n500:\tlearn: 0.0677381\ttotal: 3m 30s\tremaining: 54.2s\n501:\tlearn: 0.0677371\ttotal: 3m 31s\tremaining: 53.8s\n502:\tlearn: 0.0677361\ttotal: 3m 31s\tremaining: 53.4s\n503:\tlearn: 0.0677348\ttotal: 3m 31s\tremaining: 53s\n504:\tlearn: 0.0677334\ttotal: 3m 32s\tremaining: 52.6s\n505:\tlearn: 0.0677324\ttotal: 3m 32s\tremaining: 52.1s\n506:\tlearn: 0.0677315\ttotal: 3m 33s\tremaining: 51.7s\n507:\tlearn: 0.0677303\ttotal: 3m 33s\tremaining: 51.3s\n508:\tlearn: 0.0677292\ttotal: 3m 33s\tremaining: 50.9s\n509:\tlearn: 0.0677274\ttotal: 3m 34s\tremaining: 50.4s\n510:\tlearn: 0.0677264\ttotal: 3m 34s\tremaining: 50s\n511:\tlearn: 0.0677247\ttotal: 3m 35s\tremaining: 49.6s\n512:\tlearn: 0.0677241\ttotal: 3m 35s\tremaining: 49.2s\n513:\tlearn: 0.0677232\ttotal: 3m 35s\tremaining: 48.7s\n514:\tlearn: 0.0677219\ttotal: 3m 36s\tremaining: 48.3s\n515:\tlearn: 0.0677213\ttotal: 3m 36s\tremaining: 47.9s\n516:\tlearn: 0.0677195\ttotal: 3m 37s\tremaining: 47.4s\n517:\tlearn: 0.0677176\ttotal: 3m 37s\tremaining: 47s\n518:\tlearn: 0.0677165\ttotal: 3m 37s\tremaining: 46.6s\n519:\tlearn: 0.0677155\ttotal: 3m 38s\tremaining: 46.2s\n520:\tlearn: 0.0677145\ttotal: 3m 39s\tremaining: 45.8s\n521:\tlearn: 0.0677133\ttotal: 3m 39s\tremaining: 45.4s\n522:\tlearn: 0.0677125\ttotal: 3m 39s\tremaining: 45s\n523:\tlearn: 0.0677116\ttotal: 3m 40s\tremaining: 44.6s\n524:\tlearn: 0.0677099\ttotal: 3m 40s\tremaining: 44.1s\n525:\tlearn: 0.0677085\ttotal: 3m 40s\tremaining: 43.7s\n526:\tlearn: 0.0677070\ttotal: 3m 41s\tremaining: 43.3s\n527:\tlearn: 0.0677056\ttotal: 3m 41s\tremaining: 42.8s\n528:\tlearn: 0.0677042\ttotal: 3m 42s\tremaining: 42.4s\n529:\tlearn: 0.0677035\ttotal: 3m 42s\tremaining: 42s\n530:\tlearn: 0.0677018\ttotal: 3m 42s\tremaining: 41.6s\n","output_type":"stream"}]},{"cell_type":"code","source":"submission = pd.DataFrame({\n    'ParcelId': test_df['ParcelId'],\n})\ntest_dates = {\n    '201610': pd.Timestamp('2016-09-30'),\n    '201611': pd.Timestamp('2016-10-31'),\n    '201612': pd.Timestamp('2016-11-30'),\n    '201710': pd.Timestamp('2017-09-30'),\n    '201711': pd.Timestamp('2017-10-31'),\n    '201712': pd.Timestamp('2017-11-30')\n}\nfor label, test_date in test_dates.items():\n    print(\"Predicting for: %s ... \" % (label))\n    submission[label] = y_pred\n    \nsubmission.to_csv('Only_CatBoost.csv', float_format='%.6f',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:06:53.986879Z","iopub.status.idle":"2024-04-11T03:06:53.987312Z","shell.execute_reply.started":"2024-04-11T03:06:53.987106Z","shell.execute_reply":"2024-04-11T03:06:53.987123Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom catboost import CatBoostRegressor\nfrom tqdm import tqdm\nimport gc\nimport datetime as dt\n\nprint('Loading Properties ...')\nproperties2016 = pd.read_csv('/kaggle/input/zillow-prize-1/properties_2016.csv', low_memory = False)\nproperties2017 = pd.read_csv('/kaggle/input/zillow-prize-1/properties_2017.csv', low_memory = False)\n\nprint('Loading Train ...')\ntrain2016 = pd.read_csv('/kaggle/input/zillow-prize-1/train_2016_v2.csv', parse_dates=['transactiondate'], low_memory=False)\ntrain2017 = pd.read_csv('/kaggle/input/zillow-prize-1/train_2017.csv', parse_dates=['transactiondate'], low_memory=False)\n\ndef add_date_features(df):\n    df[\"transaction_year\"] = df[\"transactiondate\"].dt.year\n    df[\"transaction_month\"] = (df[\"transactiondate\"].dt.year - 2016)*12 + df[\"transactiondate\"].dt.month\n    df[\"transaction_day\"] = df[\"transactiondate\"].dt.day\n    df[\"transaction_quarter\"] = (df[\"transactiondate\"].dt.year - 2016)*4 +df[\"transactiondate\"].dt.quarter\n    df.drop([\"transactiondate\"], inplace=True, axis=1)\n    return df\n\ntrain2016 = add_date_features(train2016)\ntrain2017 = add_date_features(train2017)\n\nprint('Loading Sample ...')\nsample_submission = pd.read_csv('/kaggle/input/zillow-prize-1/sample_submission.csv', low_memory = False)\n\nprint('Merge Train with Properties ...')\ntrain2016 = pd.merge(train2016, properties2016, how = 'left', on = 'parcelid')\ntrain2017 = pd.merge(train2017, properties2017, how = 'left', on = 'parcelid')\n\nprint('Tax Features 2017  ...')\ntrain2017.iloc[:, train2017.columns.str.startswith('tax')] = np.nan\n\nprint('Concat Train 2016 & 2017 ...')\ntrain_df = pd.concat([train2016, train2017], axis = 0)\ntest_df = pd.merge(sample_submission[['ParcelId']], properties2016.rename(columns = {'parcelid': 'ParcelId'}), how = 'left', on = 'ParcelId')\n\ndel properties2016, properties2017, train2016, train2017\ngc.collect();\n\nprint('Remove missing data fields ...')\n\nmissing_perc_thresh = 0.98\nexclude_missing = []\nnum_rows = train_df.shape[0]\nfor c in train_df.columns:\n    num_missing = train_df[c].isnull().sum()\n    if num_missing == 0:\n        continue\n    missing_frac = num_missing / float(num_rows)\n    if missing_frac > missing_perc_thresh:\n        exclude_missing.append(c)\nprint(\"We exclude: %s\" % len(exclude_missing))\n\ndel num_rows, missing_perc_thresh\ngc.collect();\n\nprint (\"Remove features with one unique value !!\")\nexclude_unique = []\nfor c in train_df.columns:\n    num_uniques = len(train_df[c].unique())\n    if train_df[c].isnull().sum() != 0:\n        num_uniques -= 1\n    if num_uniques == 1:\n        exclude_unique.append(c)\nprint(\"We exclude: %s\" % len(exclude_unique))\n\nprint (\"Define training features !!\")\nexclude_other = ['parcelid', 'logerror','propertyzoningdesc']\ntrain_features = []\nfor c in train_df.columns:\n    if c not in exclude_missing \\\n       and c not in exclude_other and c not in exclude_unique:\n        train_features.append(c)\nprint(\"We use these for training: %s\" % len(train_features))\n\nprint (\"Define categorial features !!\")\ncat_feature_inds = []\ncat_unique_thresh = 1000\nfor i, c in enumerate(train_features):\n    num_uniques = len(train_df[c].unique())\n    if num_uniques < cat_unique_thresh \\\n       and not 'sqft' in c \\\n       and not 'cnt' in c \\\n       and not 'nbr' in c \\\n       and not 'number' in c:\n        cat_feature_inds.append(i)\n        \nprint(\"Cat features are: %s\" % [train_features[ind] for ind in cat_feature_inds])\n\nprint (\"Replacing NaN values by -999 !!\")\ntrain_df.fillna(-999, inplace=True)\ntest_df.fillna(-999, inplace=True)\n\nprint (\"Training time !!\")\nX_train = train_df[train_features]\ny_train = train_df.logerror\nprint(X_train.shape, y_train.shape)\n\ntest_df['transactiondate'] = pd.Timestamp('2016-12-01') \ntest_df = add_date_features(test_df)\nX_test = test_df[train_features]\nprint(X_test.shape)\n\nnum_ensembles = 5\ny_pred = 0.0\nfor i in tqdm(range(num_ensembles)):\n    model = CatBoostRegressor(\n        iterations=630, learning_rate=0.03,\n        depth=6, l2_leaf_reg=3,\n        loss_function='MAE',\n        eval_metric='MAE',\n        random_seed=i)\n    model.fit(\n        X_train, y_train,\n        cat_features=cat_feature_inds)\n    y_pred += model.predict(X_test)\ny_pred /= num_ensembles\n\nsubmission = pd.DataFrame({\n    'ParcelId': test_df['ParcelId'],\n})\ntest_dates = {\n    '201610': pd.Timestamp('2016-09-30'),\n    '201611': pd.Timestamp('2016-10-31'),\n    '201612': pd.Timestamp('2016-11-30'),\n    '201710': pd.Timestamp('2017-09-30'),\n    '201711': pd.Timestamp('2017-10-31'),\n    '201712': pd.Timestamp('2017-11-30')\n}\nfor label, test_date in test_dates.items():\n    print(\"Predicting for: %s ... \" % (label))\n    submission[label] = y_pred\n    \nsubmission.to_csv('Only_CatBoost.csv', float_format='%.6f',index=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-11T03:09:16.019333Z","iopub.execute_input":"2024-04-11T03:09:16.019770Z","iopub.status.idle":"2024-04-11T03:10:35.672327Z","shell.execute_reply.started":"2024-04-11T03:09:16.019741Z","shell.execute_reply":"2024-04-11T03:10:35.670664Z"},"trusted":true},"execution_count":66,"outputs":[{"name":"stdout","text":"Loading Properties ...\nLoading Train ...\nLoading Sample ...\nMerge Train with Properties ...\nTax Features 2017  ...\nConcat Train 2016 & 2017 ...\nRemove missing data fields ...\nWe exclude: 15\nRemove features with one unique value !!\nWe exclude: 9\nDefine training features !!\nWe use these for training: 42\nDefine categorial features !!\nCat features are: ['transaction_year', 'transaction_month', 'transaction_day', 'transaction_quarter', 'airconditioningtypeid', 'buildingqualitytypeid', 'fips', 'heatingorsystemtypeid', 'propertycountylandusecode', 'propertylandusetypeid', 'regionidcity', 'regionidcounty', 'regionidneighborhood', 'regionidzip', 'yearbuilt', 'assessmentyear']\nReplacing NaN values by -999 !!\nTraining time !!\n(167888, 42) (167888,)\n(2985217, 42)\n","output_type":"stream"},{"name":"stderr","text":"  0%|          | 0/5 [00:00<?, ?it/s]\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mCatBoostError\u001b[0m                             Traceback (most recent call last)","File \u001b[0;32m_catboost.pyx:2449\u001b[0m, in \u001b[0;36m_catboost.get_cat_factor_bytes_representation\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:1967\u001b[0m, in \u001b[0;36m_catboost.get_id_object_bytes_string_representation\u001b[0;34m()\u001b[0m\n","\u001b[0;31mCatBoostError\u001b[0m: bad object for id: 1.0","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mCatBoostError\u001b[0m                             Traceback (most recent call last)","Cell \u001b[0;32mIn[66], line 117\u001b[0m\n\u001b[1;32m    110\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m tqdm(\u001b[38;5;28mrange\u001b[39m(num_ensembles)):\n\u001b[1;32m    111\u001b[0m     model \u001b[38;5;241m=\u001b[39m CatBoostRegressor(\n\u001b[1;32m    112\u001b[0m         iterations\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m630\u001b[39m, learning_rate\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0.03\u001b[39m,\n\u001b[1;32m    113\u001b[0m         depth\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m6\u001b[39m, l2_leaf_reg\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m3\u001b[39m,\n\u001b[1;32m    114\u001b[0m         loss_function\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMAE\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    115\u001b[0m         eval_metric\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMAE\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    116\u001b[0m         random_seed\u001b[38;5;241m=\u001b[39mi)\n\u001b[0;32m--> 117\u001b[0m     \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfit\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    118\u001b[0m \u001b[43m        \u001b[49m\u001b[43mX_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_train\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    119\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcat_feature_inds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    120\u001b[0m     y_pred \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m model\u001b[38;5;241m.\u001b[39mpredict(X_test)\n\u001b[1;32m    121\u001b[0m y_pred \u001b[38;5;241m/\u001b[39m\u001b[38;5;241m=\u001b[39m num_ensembles\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:5807\u001b[0m, in \u001b[0;36mCatBoostRegressor.fit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, sample_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   5804\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mloss_function\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m params:\n\u001b[1;32m   5805\u001b[0m     CatBoostRegressor\u001b[38;5;241m.\u001b[39m_check_is_compatible_loss(params[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mloss_function\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m-> 5807\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_fit\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5808\u001b[0m \u001b[43m                 \u001b[49m\u001b[43muse_best_model\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43meval_set\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mverbose\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogging_level\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot_file\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolumn_description\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5809\u001b[0m \u001b[43m                 \u001b[49m\u001b[43mverbose_eval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmetric_period\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msilent\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mearly_stopping_rounds\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5810\u001b[0m \u001b[43m                 \u001b[49m\u001b[43msave_snapshot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msnapshot_file\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msnapshot_interval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minit_model\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcallbacks\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlog_cout\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlog_cerr\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:2381\u001b[0m, in \u001b[0;36mCatBoost._fit\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, pairs, sample_weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks, log_cout, log_cerr)\u001b[0m\n\u001b[1;32m   2378\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(X, PATH_TYPES \u001b[38;5;241m+\u001b[39m (Pool,)):\n\u001b[1;32m   2379\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m CatBoostError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my may be None only when X is an instance of catboost.Pool or string\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m-> 2381\u001b[0m train_params \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_prepare_train_params\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2382\u001b[0m \u001b[43m    \u001b[49m\u001b[43mX\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2383\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpairs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpairs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_id\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2384\u001b[0m \u001b[43m    \u001b[49m\u001b[43msubgroup_id\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msubgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpairs_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muse_best_model\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43muse_best_model\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2385\u001b[0m \u001b[43m    \u001b[49m\u001b[43meval_set\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43meval_set\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mverbose\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mverbose\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlogging_level\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlogging_level\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mplot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplot_file\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mplot_file\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2386\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcolumn_description\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumn_description\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mverbose_eval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mverbose_eval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmetric_period\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmetric_period\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2387\u001b[0m \u001b[43m    \u001b[49m\u001b[43msilent\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msilent\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mearly_stopping_rounds\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mearly_stopping_rounds\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msave_snapshot\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msave_snapshot\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2388\u001b[0m \u001b[43m    \u001b[49m\u001b[43msnapshot_file\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msnapshot_file\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msnapshot_interval\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msnapshot_interval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minit_model\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minit_model\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2389\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcallbacks\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcallbacks\u001b[49m\n\u001b[1;32m   2390\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2391\u001b[0m params \u001b[38;5;241m=\u001b[39m train_params[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparams\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   2392\u001b[0m train_pool \u001b[38;5;241m=\u001b[39m train_params[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtrain_pool\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:2261\u001b[0m, in \u001b[0;36mCatBoost._prepare_train_params\u001b[0;34m(self, X, y, cat_features, text_features, embedding_features, pairs, sample_weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, use_best_model, eval_set, verbose, logging_level, plot, plot_file, column_description, verbose_eval, metric_period, silent, early_stopping_rounds, save_snapshot, snapshot_file, snapshot_interval, init_model, callbacks)\u001b[0m\n\u001b[1;32m   2258\u001b[0m text_features \u001b[38;5;241m=\u001b[39m _process_feature_indices(text_features, X, params, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtext_features\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m   2259\u001b[0m embedding_features \u001b[38;5;241m=\u001b[39m _process_feature_indices(embedding_features, X, params, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124membedding_features\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m-> 2261\u001b[0m train_pool \u001b[38;5;241m=\u001b[39m \u001b[43m_build_train_pool\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2262\u001b[0m \u001b[43m                               \u001b[49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msubgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs_weight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2263\u001b[0m \u001b[43m                               \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolumn_description\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2264\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m train_pool\u001b[38;5;241m.\u001b[39mis_empty_:\n\u001b[1;32m   2265\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m CatBoostError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mX is empty.\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:1499\u001b[0m, in \u001b[0;36m_build_train_pool\u001b[0;34m(X, y, cat_features, text_features, embedding_features, pairs, sample_weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, column_description)\u001b[0m\n\u001b[1;32m   1497\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m y \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1498\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m CatBoostError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my has not initialized in fit(): X is not catboost.Pool object, y must be not None in fit().\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m-> 1499\u001b[0m     train_pool \u001b[38;5;241m=\u001b[39m \u001b[43mPool\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpairs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mweight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msample_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_id\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_id\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1500\u001b[0m \u001b[43m                      \u001b[49m\u001b[43mgroup_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msubgroup_id\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msubgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs_weight\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mpairs_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbaseline\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1501\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m train_pool\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:844\u001b[0m, in \u001b[0;36mPool.__init__\u001b[0;34m(self, data, label, cat_features, text_features, embedding_features, embedding_features_data, column_description, pairs, delimiter, has_header, ignore_csv_quoting, weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, timestamp, feature_names, feature_tags, thread_count, log_cout, log_cerr, data_can_be_none)\u001b[0m\n\u001b[1;32m    838\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(feature_names, PATH_TYPES):\n\u001b[1;32m    839\u001b[0m             \u001b[38;5;28;01mraise\u001b[39;00m CatBoostError(\n\u001b[1;32m    840\u001b[0m                 \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfeature_names must be None or have non-string type when the pool is created from \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    841\u001b[0m                 \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpython objects.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    842\u001b[0m             )\n\u001b[0;32m--> 844\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_init\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features_data\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mweight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    845\u001b[0m \u001b[43m                   \u001b[49m\u001b[43mgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msubgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimestamp\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfeature_names\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfeature_tags\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mthread_count\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    846\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m data_can_be_none:\n\u001b[1;32m    847\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m CatBoostError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdata\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m parameter can\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mt be None\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/catboost/core.py:1477\u001b[0m, in \u001b[0;36mPool._init\u001b[0;34m(self, data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, weight, group_id, group_weight, subgroup_id, pairs_weight, baseline, timestamp, feature_names, feature_tags, thread_count)\u001b[0m\n\u001b[1;32m   1475\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m feature_tags \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1476\u001b[0m     feature_tags \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_transform_tags(feature_tags, feature_names)\n\u001b[0;32m-> 1477\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_init_pool\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlabel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcat_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtext_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43membedding_features_data\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mweight\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1478\u001b[0m \u001b[43m                \u001b[49m\u001b[43mgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgroup_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msubgroup_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpairs_weight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbaseline\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtimestamp\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfeature_names\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfeature_tags\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mthread_count\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m_catboost.pyx:4159\u001b[0m, in \u001b[0;36m_catboost._PoolBase._init_pool\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:4209\u001b[0m, in \u001b[0;36m_catboost._PoolBase._init_pool\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:4025\u001b[0m, in \u001b[0;36m_catboost._PoolBase._init_features_order_layout_pool\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:2936\u001b[0m, in \u001b[0;36m_catboost._set_features_order_data_pd_data_frame\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m_catboost.pyx:2456\u001b[0m, in \u001b[0;36m_catboost.get_cat_factor_bytes_representation\u001b[0;34m()\u001b[0m\n","\u001b[0;31mCatBoostError\u001b[0m: Invalid type for cat_feature[non-default value idx=0,feature_idx=4]=1.0 : cat_features must be integer or string, real number values and NaN values should be converted to string."],"ename":"CatBoostError","evalue":"Invalid type for cat_feature[non-default value idx=0,feature_idx=4]=1.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.","output_type":"error"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}